{"ast":null,"code":"var makeString = require('./helper/makeString');\n\n/**\r\n * Based on the implementation here: https://github.com/hiddentao/fast-levenshtein\r\n */\nmodule.exports = function levenshtein(str1, str2) {\n  'use strict';\n\n  str1 = makeString(str1);\n  str2 = makeString(str2);\n\n  // Short cut cases  \n  if (str1 === str2) return 0;\n  if (!str1 || !str2) return Math.max(str1.length, str2.length);\n\n  // two rows\n  var prevRow = new Array(str2.length + 1);\n\n  // initialise previous row\n  for (var i = 0; i < prevRow.length; ++i) {\n    prevRow[i] = i;\n  }\n\n  // calculate current row distance from previous row\n  for (i = 0; i < str1.length; ++i) {\n    var nextCol = i + 1;\n    for (var j = 0; j < str2.length; ++j) {\n      var curCol = nextCol;\n\n      // substution\n      nextCol = prevRow[j] + (str1.charAt(i) === str2.charAt(j) ? 0 : 1);\n      // insertion\n      var tmp = curCol + 1;\n      if (nextCol > tmp) {\n        nextCol = tmp;\n      }\n      // deletion\n      tmp = prevRow[j + 1] + 1;\n      if (nextCol > tmp) {\n        nextCol = tmp;\n      }\n\n      // copy current col value into previous (in preparation for next iteration)\n      prevRow[j] = curCol;\n    }\n\n    // copy last col value into previous (in preparation for next iteration)\n    prevRow[j] = nextCol;\n  }\n  return nextCol;\n};","map":{"version":3,"names":["makeString","require","module","exports","levenshtein","str1","str2","Math","max","length","prevRow","Array","i","nextCol","j","curCol","charAt","tmp"],"sources":["C:/frontend/node_modules/underscore.string/levenshtein.js"],"sourcesContent":["var makeString = require('./helper/makeString');\r\n\r\n/**\r\n * Based on the implementation here: https://github.com/hiddentao/fast-levenshtein\r\n */\r\nmodule.exports = function levenshtein(str1, str2) {\r\n  'use strict';\r\n  str1 = makeString(str1);\r\n  str2 = makeString(str2);\r\n\r\n  // Short cut cases  \r\n  if (str1 === str2) return 0;\r\n  if (!str1 || !str2) return Math.max(str1.length, str2.length);\r\n\r\n  // two rows\r\n  var prevRow = new Array(str2.length + 1);\r\n\r\n  // initialise previous row\r\n  for (var i = 0; i < prevRow.length; ++i) {\r\n    prevRow[i] = i;\r\n  }\r\n\r\n  // calculate current row distance from previous row\r\n  for (i = 0; i < str1.length; ++i) {\r\n    var nextCol = i + 1;\r\n\r\n    for (var j = 0; j < str2.length; ++j) {\r\n      var curCol = nextCol;\r\n\r\n      // substution\r\n      nextCol = prevRow[j] + ( (str1.charAt(i) === str2.charAt(j)) ? 0 : 1 );\r\n      // insertion\r\n      var tmp = curCol + 1;\r\n      if (nextCol > tmp) {\r\n        nextCol = tmp;\r\n      }\r\n      // deletion\r\n      tmp = prevRow[j + 1] + 1;\r\n      if (nextCol > tmp) {\r\n        nextCol = tmp;\r\n      }\r\n\r\n      // copy current col value into previous (in preparation for next iteration)\r\n      prevRow[j] = curCol;\r\n    }\r\n\r\n    // copy last col value into previous (in preparation for next iteration)\r\n    prevRow[j] = nextCol;\r\n  }\r\n\r\n  return nextCol;\r\n};\r\n"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,qBAAqB,CAAC;;AAE/C;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,SAASC,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAChD,YAAY;;EACZD,IAAI,GAAGL,UAAU,CAACK,IAAI,CAAC;EACvBC,IAAI,GAAGN,UAAU,CAACM,IAAI,CAAC;;EAEvB;EACA,IAAID,IAAI,KAAKC,IAAI,EAAE,OAAO,CAAC;EAC3B,IAAI,CAACD,IAAI,IAAI,CAACC,IAAI,EAAE,OAAOC,IAAI,CAACC,GAAG,CAACH,IAAI,CAACI,MAAM,EAAEH,IAAI,CAACG,MAAM,CAAC;;EAE7D;EACA,IAAIC,OAAO,GAAG,IAAIC,KAAK,CAACL,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC;;EAExC;EACA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACD,MAAM,EAAE,EAAEG,CAAC,EAAE;IACvCF,OAAO,CAACE,CAAC,CAAC,GAAGA,CAAC;EAChB;;EAEA;EACA,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,IAAI,CAACI,MAAM,EAAE,EAAEG,CAAC,EAAE;IAChC,IAAIC,OAAO,GAAGD,CAAC,GAAG,CAAC;IAEnB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,IAAI,CAACG,MAAM,EAAE,EAAEK,CAAC,EAAE;MACpC,IAAIC,MAAM,GAAGF,OAAO;;MAEpB;MACAA,OAAO,GAAGH,OAAO,CAACI,CAAC,CAAC,IAAMT,IAAI,CAACW,MAAM,CAACJ,CAAC,CAAC,KAAKN,IAAI,CAACU,MAAM,CAACF,CAAC,CAAC,GAAI,CAAC,GAAG,CAAC,CAAE;MACtE;MACA,IAAIG,GAAG,GAAGF,MAAM,GAAG,CAAC;MACpB,IAAIF,OAAO,GAAGI,GAAG,EAAE;QACjBJ,OAAO,GAAGI,GAAG;MACf;MACA;MACAA,GAAG,GAAGP,OAAO,CAACI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;MACxB,IAAID,OAAO,GAAGI,GAAG,EAAE;QACjBJ,OAAO,GAAGI,GAAG;MACf;;MAEA;MACAP,OAAO,CAACI,CAAC,CAAC,GAAGC,MAAM;IACrB;;IAEA;IACAL,OAAO,CAACI,CAAC,CAAC,GAAGD,OAAO;EACtB;EAEA,OAAOA,OAAO;AAChB,CAAC"},"metadata":{},"sourceType":"script"}