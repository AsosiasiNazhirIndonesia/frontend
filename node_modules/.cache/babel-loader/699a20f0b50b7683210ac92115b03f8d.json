{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend\\\\src\\\\magic\\\\callback.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { magic } from './lib/magic';\nimport Loading from './loading';\nimport { useHistory } from 'react-router-dom';\nimport API from '../services/api';\nimport magicweb3 from '../services/magicweb3';\nimport { setActorType } from '../modules/actions/actor.action';\nimport { ACTOR, ACTOR_TOKEN } from \"../constants/component.constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Callback = props => {\n  _s();\n  const history = useHistory();\n  // The redirect contains a `provider` query param if the user is logging in with a social provider\n  useEffect(() => {\n    let magicCredential = new URLSearchParams(props.location.search).get('magic_credential');\n    if (magicCredential) magic.auth.loginWithCredential().then(didToken => authenticateWithServer(didToken));\n  }, [props.location.search]);\n\n  // Send token to server to validate\n  const authenticateWithServer = async didToken => {\n    let res = await fetch(`${process.env.REACT_APP_SERVER_URL}/api/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + didToken\n      }\n    });\n    if (res.status === 200) {\n      // Set the UserContext to the now logged in user\n      let userMetadata = await magic.user.getMetadata();\n      let user;\n      const admin = await API.getAdminByPublicKey(userMetadata.publicAddress);\n      if (!admin) {\n        user = await API.getUserByPublicKey(userMetadata.publicAddress);\n        if (!user) {\n          let request = {\n            name: userMetadata.email.split(\"@\")[0],\n            email: userMetadata.email,\n            public_key: userMetadata.publicAddress\n            // phone_number: userMetadata.phoneNumber, //defaulted\n            // photo: 'a23ebf30-8beb-11ed-ada9-05a51e9dd947.png' //defaulted\n          };\n\n          user = await API.createUser(request);\n        }\n      }\n      const message = `DIGICERT${admin ? admin.login_nonce : user.login_nonce}`;\n      const dataToSign = magicweb3.utils.sha3(message);\n      const signature = await magicweb3.eth.personal.sign(dataToSign, admin ? admin.public_key : user.public_key);\n      const result = admin ? await API.adminLogin({\n        admin_id: admin.admin_id,\n        signature\n      }) : await API.userLogin({\n        user_id: user.user_id,\n        signature\n      });\n      localStorage.setItem(admin ? ACTOR_TOKEN.DIGICERT_ADMIN_TOKEN : ACTOR_TOKEN.DIGICERT_USER_TOKEN, result.token);\n      props.setActorType(admin ? ACTOR.ADMIN : ACTOR.USER);\n      history.push(admin ? '/dashboard/ADMIN' : '/dashboard/USER');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n_s(Callback, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n_c = Callback;\nconst mapDispatchToProps = dispatch => {\n  return {\n    async setActorType(type) {\n      dispatch(setActorType(type));\n    }\n  };\n};\nexport default connect(null, mapDispatchToProps)( /*#__PURE__*/React.memo(Callback));\n// export default Callback;\nvar _c;\n$RefreshReg$(_c, \"Callback\");","map":{"version":3,"names":["React","useEffect","connect","magic","Loading","useHistory","API","magicweb3","setActorType","ACTOR","ACTOR_TOKEN","jsxDEV","_jsxDEV","Callback","props","_s","history","magicCredential","URLSearchParams","location","search","get","auth","loginWithCredential","then","didToken","authenticateWithServer","res","fetch","process","env","REACT_APP_SERVER_URL","method","headers","Authorization","status","userMetadata","user","getMetadata","admin","getAdminByPublicKey","publicAddress","getUserByPublicKey","request","name","email","split","public_key","createUser","message","login_nonce","dataToSign","utils","sha3","signature","eth","personal","sign","result","adminLogin","admin_id","userLogin","user_id","localStorage","setItem","DIGICERT_ADMIN_TOKEN","DIGICERT_USER_TOKEN","token","ADMIN","USER","push","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapDispatchToProps","dispatch","type","memo","$RefreshReg$"],"sources":["C:/frontend/src/magic/callback.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { magic } from './lib/magic';\r\nimport Loading from './loading';\r\nimport { useHistory } from 'react-router-dom';\r\nimport API from '../services/api';\r\nimport magicweb3 from '../services/magicweb3';\r\nimport { setActorType } from '../modules/actions/actor.action';\r\nimport { ACTOR, ACTOR_TOKEN } from \"../constants/component.constant\";\r\n\r\nconst Callback = (props) => {\r\n  const history = useHistory();\r\n  // The redirect contains a `provider` query param if the user is logging in with a social provider\r\n  useEffect(() => {\r\n    let magicCredential = new URLSearchParams(props.location.search).get('magic_credential');\r\n    if (magicCredential) magic.auth.loginWithCredential().then((didToken) => authenticateWithServer(didToken));\r\n  }, [props.location.search]);\r\n\r\n  // Send token to server to validate\r\n  const authenticateWithServer = async (didToken) => {\r\n    let res = await fetch(`${process.env.REACT_APP_SERVER_URL}/api/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + didToken,\r\n      },\r\n    });\r\n\r\n    if (res.status === 200) {\r\n      // Set the UserContext to the now logged in user\r\n            let userMetadata = await magic.user.getMetadata();\r\n            let user;\r\n\r\n            const admin = await API.getAdminByPublicKey(userMetadata.publicAddress);\r\n            if (!admin) {\r\n              user = await API.getUserByPublicKey(userMetadata.publicAddress);\r\n              if (!user) {\r\n                let request = {\r\n                  name: userMetadata.email.split(\"@\")[0],\r\n                  email: userMetadata.email,\r\n                  public_key: userMetadata.publicAddress\r\n                  // phone_number: userMetadata.phoneNumber, //defaulted\r\n                  // photo: 'a23ebf30-8beb-11ed-ada9-05a51e9dd947.png' //defaulted\r\n                }\r\n                user = await API.createUser(request);\r\n              }\r\n            }\r\n            const message = `DIGICERT${(admin) ? admin.login_nonce : user.login_nonce}`;\r\n            const dataToSign = magicweb3.utils.sha3(message);\r\n            const signature = await magicweb3.eth.personal.sign(dataToSign, (admin) ? admin.public_key : user.public_key);  \r\n            const result = (admin) ? await API.adminLogin({admin_id: admin.admin_id, signature}) : await API.userLogin({user_id: user.user_id, signature});\r\n            localStorage.setItem((admin) ? ACTOR_TOKEN.DIGICERT_ADMIN_TOKEN : ACTOR_TOKEN.DIGICERT_USER_TOKEN, result.token);\r\n            props.setActorType((admin) ? ACTOR.ADMIN : ACTOR.USER);\r\n            history.push((admin) ? '/dashboard/ADMIN' : '/dashboard/USER');\r\n    }\r\n  };\r\n\r\n  return <Loading />;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      async setActorType(type) {\r\n          dispatch(setActorType(type));\r\n      }\r\n  }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(React.memo(Callback));\r\n// export default Callback;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}