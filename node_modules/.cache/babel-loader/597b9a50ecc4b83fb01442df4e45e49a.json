{"ast":null,"code":"var _jsxFileName = \"C:\\\\spasi\\\\frontend\\\\src\\\\magic\\\\login.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { magic } from './lib/magic';\nimport { UserContext } from './lib/UserContext';\nimport EmailForm from './email-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const history = useHistory();\n  const [disabled, setDisabled] = useState(false);\n  const [user, setUser] = useContext(UserContext);\n\n  // If user is already logged in\n  useEffect(() => {\n    user && user.issuer && history.push('/'); //push to mainscreen\n  }, [user, history]);\n  async function handleLoginWithEmail(email) {\n    try {\n      setDisabled(true); // disable login button to prevent multiple emails from being triggered\n\n      // Trigger Magic link to be sent to user\n      let didToken = await magic.auth.loginWithMagicLink({\n        email,\n        redirectURI: new URL('/callback', window.location.origin).href // optional redirect back to your app after magic link is clicked\n      });\n\n      // Validate didToken with server\n      const res = await fetch(`${process.env.REACT_APP_SERVER_URL}/api/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + didToken\n        }\n      });\n      if (res.status === 200) {\n        // Set the UserContext to the now logged in user\n        let userMetadata = await magic.user.getMetadata();\n        await setUser(userMetadata);\n      }\n    } catch (error) {\n      setDisabled(false); // re-enable login button - user may have requested to edit their email\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(EmailForm, {\n        disabled: disabled,\n        onEmailSubmit: handleLoginWithEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .login {\n          display: flex;\n          flex-direction: column;\n          justify-content: flex-start;\n          align-items: center;\n          border: 1px solid #dfe1e5;\n          border-radius: 4px;\n          text-align: center;\n          box-shadow: 0px 0px 6px 6px #f7f7f7;\n          box-sizing: border-box;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"damJcsD+tDgKf3/dSjBEbCwkLwQ=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","useContext","useHistory","magic","UserContext","EmailForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","history","disabled","setDisabled","user","setUser","issuer","push","handleLoginWithEmail","email","didToken","auth","loginWithMagicLink","redirectURI","URL","window","location","origin","href","res","fetch","process","env","REACT_APP_SERVER_URL","method","headers","Authorization","status","userMetadata","getMetadata","error","console","log","children","className","onEmailSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/spasi/frontend/src/magic/login.js"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { magic } from './lib/magic';\r\nimport { UserContext } from './lib/UserContext';\r\nimport EmailForm from './email-form';\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  // If user is already logged in\r\n  useEffect(() => {\r\n    user && user.issuer && history.push('/'); //push to mainscreen\r\n  }, [user, history]);\r\n\r\n  async function handleLoginWithEmail(email) {\r\n    try {\r\n      setDisabled(true); // disable login button to prevent multiple emails from being triggered\r\n\r\n      // Trigger Magic link to be sent to user\r\n      let didToken = await magic.auth.loginWithMagicLink({\r\n        email,\r\n        redirectURI: new URL('/callback', window.location.origin).href, // optional redirect back to your app after magic link is clicked\r\n      });\r\n\r\n      // Validate didToken with server\r\n      const res = await fetch(`${process.env.REACT_APP_SERVER_URL}/api/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + didToken,\r\n        },\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        // Set the UserContext to the now logged in user\r\n        let userMetadata = await magic.user.getMetadata();\r\n        await setUser(userMetadata);\r\n      }\r\n    } catch (error) {\r\n      setDisabled(false); // re-enable login button - user may have requested to edit their email\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='login'>\r\n        <EmailForm disabled={disabled} onEmailSubmit={handleLoginWithEmail} />\r\n      </div>\r\n      <style>{`\r\n        .login {\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: flex-start;\r\n          align-items: center;\r\n          border: 1px solid #dfe1e5;\r\n          border-radius: 4px;\r\n          text-align: center;\r\n          box-shadow: 0px 0px 6px 6px #f7f7f7;\r\n          box-sizing: border-box;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,OAAO,GAAGV,UAAU,EAAE;EAC5B,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGf,UAAU,CAACG,WAAW,CAAC;;EAE/C;EACAJ,SAAS,CAAC,MAAM;IACde,IAAI,IAAIA,IAAI,CAACE,MAAM,IAAIL,OAAO,CAACM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACH,IAAI,EAAEH,OAAO,CAAC,CAAC;EAEnB,eAAeO,oBAAoBA,CAACC,KAAK,EAAE;IACzC,IAAI;MACFN,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEnB;MACA,IAAIO,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAACC,kBAAkB,CAAC;QACjDH,KAAK;QACLI,WAAW,EAAE,IAAIC,GAAG,CAAC,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAACC,IAAI,CAAE;MAClE,CAAC,CAAC;;MAEF;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,YAAW,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,SAAS,GAAGhB;QAC7B;MACF,CAAC,CAAC;MAEF,IAAIS,GAAG,CAACQ,MAAM,KAAK,GAAG,EAAE;QACtB;QACA,IAAIC,YAAY,GAAG,MAAMpC,KAAK,CAACY,IAAI,CAACyB,WAAW,EAAE;QACjD,MAAMxB,OAAO,CAACuB,YAAY,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd3B,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;MACpB4B,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF;EAEA,oBACElC,OAAA,CAAAE,SAAA;IAAAmC,QAAA,gBACErC,OAAA;MAAKsC,SAAS,EAAC,OAAO;MAAAD,QAAA,eACpBrC,OAAA,CAACF,SAAS;QAACQ,QAAQ,EAAEA,QAAS;QAACiC,aAAa,EAAE3B;MAAqB;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClE,eACN3C,OAAA;MAAAqC,QAAA,EAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBACT;AAEP,CAAC;AAACvC,EAAA,CA5DID,KAAK;EAAA,QACOR,UAAU;AAAA;AAAAiD,EAAA,GADtBzC,KAAK;AA8DX,eAAeA,KAAK;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}