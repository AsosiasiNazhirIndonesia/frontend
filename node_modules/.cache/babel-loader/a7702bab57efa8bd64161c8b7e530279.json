{"ast":null,"code":"var _jsxFileName = \"C:\\\\___spasi\\\\frontend\\\\src\\\\components\\\\Modal\\\\ModalCertificateType.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./ModalCertificateType.module.scss\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport InputFieldControl from \"../elements/InputField/InputFieldControl\";\nimport Button from \"../elements/Button\";\nimport API from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCertTypeSchema = yup.object({\n  certificate_type: yup.string().required()\n});\nconst ModalCertificateType = _ref => {\n  _s();\n  let {\n    title,\n    visible,\n    selectedData,\n    onCancel,\n    onSubmitted\n  } = _ref;\n  const {\n    control,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    setValue\n  } = useForm({\n    resolver: yupResolver(addCertTypeSchema)\n  });\n  const [isLoading, setLoading] = useState(false);\n  const [selectedId, setSelectedId] = useState(selectedData === null || selectedData === void 0 ? void 0 : selectedData.id);\n  useEffect(() => {\n    if (selectedData) {\n      setValue(\"certificate_type\", selectedData === null || selectedData === void 0 ? void 0 : selectedData.name);\n      setSelectedId(selectedData === null || selectedData === void 0 ? void 0 : selectedData.id);\n    }\n  }, [selectedData]);\n  const handleAdd = async values => {\n    setLoading(true);\n    try {\n      const result = await API.addCertificateType(values);\n      onSubmitted && onSubmitted();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEdit = async values => {\n    setLoading(true);\n    try {\n      const result = await API.updateCertificateType({\n        certificate_type_id: selectedData === null || selectedData === void 0 ? void 0 : selectedData.id,\n        certificate_type: values === null || values === void 0 ? void 0 : values.certificate_type\n      });\n      onSubmitted && onSubmitted();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: visible ? \"modal-container\" : \"hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(d => {\n          if (selectedData) {\n            handleEdit(d);\n          } else {\n            handleAdd(d);\n          }\n        }),\n        children: [/*#__PURE__*/_jsxDEV(InputFieldControl, {\n          label: \"Certificate Type Name\",\n          control: control,\n          errors: errors.certificate_type,\n          name: \"certificate_type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"submit-btn-container\"],\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            isProcessing: isLoading,\n            buttonText: \"Add\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            buttonText: \"Cancel\",\n            onClick: () => onCancel && onCancel(),\n            className: \"bg-grey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalCertificateType, \"WpmfhsKtctWlDuD8/5MG7Orrf0s=\", false, function () {\n  return [useForm];\n});\n_c = ModalCertificateType;\nexport default ModalCertificateType;\nvar _c;\n$RefreshReg$(_c, \"ModalCertificateType\");","map":{"version":3,"names":["React","useEffect","useState","styles","useForm","yup","yupResolver","InputFieldControl","Button","API","jsxDEV","_jsxDEV","addCertTypeSchema","object","certificate_type","string","required","ModalCertificateType","_ref","_s","title","visible","selectedData","onCancel","onSubmitted","control","formState","errors","handleSubmit","setValue","resolver","isLoading","setLoading","selectedId","setSelectedId","id","name","handleAdd","values","result","addCertificateType","error","console","handleEdit","updateCertificateType","certificate_type_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","d","label","isProcessing","buttonText","type","onClick","_c","$RefreshReg$"],"sources":["C:/___spasi/frontend/src/components/Modal/ModalCertificateType.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./ModalCertificateType.module.scss\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport InputFieldControl from \"../elements/InputField/InputFieldControl\";\r\nimport Button from \"../elements/Button\";\r\nimport API from \"../../services/api\";\r\n\r\nconst addCertTypeSchema = yup.object({\r\n  certificate_type: yup.string().required(),\r\n});\r\n\r\nconst ModalCertificateType = ({\r\n  title,\r\n  visible,\r\n  selectedData,\r\n  onCancel,\r\n  onSubmitted,\r\n}) => {\r\n  const {\r\n    control,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    setValue,\r\n  } = useForm({\r\n    resolver: yupResolver(addCertTypeSchema),\r\n  });\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [selectedId, setSelectedId] = useState(selectedData?.id);\r\n\r\n  useEffect(() => {\r\n    if (selectedData) {\r\n      setValue(\"certificate_type\", selectedData?.name);\r\n      setSelectedId(selectedData?.id);\r\n    }\r\n  }, [selectedData]);\r\n\r\n  const handleAdd = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await API.addCertificateType(values);\r\n      onSubmitted && onSubmitted();\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await API.updateCertificateType({\r\n        certificate_type_id: selectedData?.id,\r\n        certificate_type: values?.certificate_type,\r\n      });\r\n      onSubmitted && onSubmitted();\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={visible ? \"modal-container\" : \"hidden\"}>\r\n      <div className={\"modal-box\"}>\r\n        <h1>{title}</h1>\r\n        <form\r\n          onSubmit={handleSubmit((d) => {\r\n            if (selectedData) {\r\n              handleEdit(d);\r\n            } else {\r\n              handleAdd(d);\r\n            }\r\n          })}\r\n        >\r\n          <InputFieldControl\r\n            label=\"Certificate Type Name\"\r\n            control={control}\r\n            errors={errors.certificate_type}\r\n            name=\"certificate_type\"\r\n          />\r\n          <div className={styles[\"submit-btn-container\"]}>\r\n            <Button isProcessing={isLoading} buttonText=\"Add\" type=\"submit\" />\r\n            <Button\r\n              buttonText=\"Cancel\"\r\n              onClick={() => onCancel && onCancel()}\r\n              className=\"bg-grey\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalCertificateType;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}