{"ast":null,"code":"\"use strict\";\n\nimport { Coder } from \"./abstract-coder\";\nexport class BooleanCoder extends Coder {\n  constructor(localName) {\n    super(\"bool\", \"bool\", localName, false);\n  }\n  encode(writer, value) {\n    return writer.writeValue(value ? 1 : 0);\n  }\n  decode(reader) {\n    return reader.coerce(this.type, !reader.readValue().isZero());\n  }\n}","map":{"version":3,"sources":["../../src.ts/coders/boolean.ts"],"names":[],"mappings":"AAAA,YAAY;;AAEZ,SAAS,KAAK,QAAwB,kBAAkB;AAExD,OAAM,MAAO,YAAa,SAAQ,KAAK,CAAA;EAEnC,WAAA,CAAY,SAAiB,EAAA;IACzB,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC;EAC3C;EAEA,MAAM,CAAC,MAAc,EAAE,KAAc,EAAA;IACjC,OAAO,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,GAAE,CAAC,CAAC;EAC1C;EAEA,MAAM,CAAC,MAAc,EAAA;IACjB,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,CAAC;EACjE;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\r\nimport { Coder } from \"./abstract-coder\";\r\nexport class BooleanCoder extends Coder {\r\n    constructor(localName) {\r\n        super(\"bool\", \"bool\", localName, false);\r\n    }\r\n    encode(writer, value) {\r\n        return writer.writeValue(value ? 1 : 0);\r\n    }\r\n    decode(reader) {\r\n        return reader.coerce(this.type, !reader.readValue().isZero());\r\n    }\r\n}\r\n//# sourceMappingURL=boolean.js.map"]},"metadata":{},"sourceType":"module"}