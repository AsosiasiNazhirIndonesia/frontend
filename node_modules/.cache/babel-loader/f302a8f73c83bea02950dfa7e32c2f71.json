{"ast":null,"code":"/*\n* Underscore.string\n* (c) 2010 Esa-Matti Suuronen <esa-matti aet suuronen dot org>\n* Underscore.string is freely distributable under the terms of the MIT license.\n* Documentation: https://github.com/epeli/underscore.string\n* Some code is borrowed from MooTools and Alexandru Marasteanu.\n* Version '3.3.6'\n* @preserve\n*/\n\n'use strict';\n\nfunction s(value) {\n  /* jshint validthis: true */\n  if (!(this instanceof s)) return new s(value);\n  this._wrapped = value;\n}\ns.VERSION = '3.3.6';\ns.isBlank = require('./isBlank');\ns.stripTags = require('./stripTags');\ns.capitalize = require('./capitalize');\ns.decapitalize = require('./decapitalize');\ns.chop = require('./chop');\ns.trim = require('./trim');\ns.clean = require('./clean');\ns.cleanDiacritics = require('./cleanDiacritics');\ns.count = require('./count');\ns.chars = require('./chars');\ns.swapCase = require('./swapCase');\ns.escapeHTML = require('./escapeHTML');\ns.unescapeHTML = require('./unescapeHTML');\ns.splice = require('./splice');\ns.insert = require('./insert');\ns.replaceAll = require('./replaceAll');\ns.include = require('./include');\ns.join = require('./join');\ns.lines = require('./lines');\ns.dedent = require('./dedent');\ns.reverse = require('./reverse');\ns.startsWith = require('./startsWith');\ns.endsWith = require('./endsWith');\ns.pred = require('./pred');\ns.succ = require('./succ');\ns.titleize = require('./titleize');\ns.camelize = require('./camelize');\ns.underscored = require('./underscored');\ns.dasherize = require('./dasherize');\ns.classify = require('./classify');\ns.humanize = require('./humanize');\ns.ltrim = require('./ltrim');\ns.rtrim = require('./rtrim');\ns.truncate = require('./truncate');\ns.prune = require('./prune');\ns.words = require('./words');\ns.pad = require('./pad');\ns.lpad = require('./lpad');\ns.rpad = require('./rpad');\ns.lrpad = require('./lrpad');\ns.sprintf = require('./sprintf');\ns.vsprintf = require('./vsprintf');\ns.toNumber = require('./toNumber');\ns.numberFormat = require('./numberFormat');\ns.strRight = require('./strRight');\ns.strRightBack = require('./strRightBack');\ns.strLeft = require('./strLeft');\ns.strLeftBack = require('./strLeftBack');\ns.toSentence = require('./toSentence');\ns.toSentenceSerial = require('./toSentenceSerial');\ns.slugify = require('./slugify');\ns.surround = require('./surround');\ns.quote = require('./quote');\ns.unquote = require('./unquote');\ns.repeat = require('./repeat');\ns.naturalCmp = require('./naturalCmp');\ns.levenshtein = require('./levenshtein');\ns.toBoolean = require('./toBoolean');\ns.exports = require('./exports');\ns.escapeRegExp = require('./helper/escapeRegExp');\ns.wrap = require('./wrap');\ns.map = require('./map');\n\n// Aliases\ns.strip = s.trim;\ns.lstrip = s.ltrim;\ns.rstrip = s.rtrim;\ns.center = s.lrpad;\ns.rjust = s.lpad;\ns.ljust = s.rpad;\ns.contains = s.include;\ns.q = s.quote;\ns.toBool = s.toBoolean;\ns.camelcase = s.camelize;\ns.mapChars = s.map;\n\n// Implement chaining\ns.prototype = {\n  value: function value() {\n    return this._wrapped;\n  }\n};\nfunction fn2method(key, fn) {\n  if (typeof fn !== 'function') return;\n  s.prototype[key] = function () {\n    var args = [this._wrapped].concat(Array.prototype.slice.call(arguments));\n    var res = fn.apply(null, args);\n    // if the result is non-string stop the chain and return the value\n    return typeof res === 'string' ? new s(res) : res;\n  };\n}\n\n// Copy functions to instance methods for chaining\nfor (var key in s) fn2method(key, s[key]);\nfn2method('tap', function tap(string, fn) {\n  return fn(string);\n});\nfunction prototype2method(methodName) {\n  fn2method(methodName, function (context) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return String.prototype[methodName].apply(context, args);\n  });\n}\nvar prototypeMethods = ['toUpperCase', 'toLowerCase', 'split', 'replace', 'slice', 'substring', 'substr', 'concat'];\nfor (var method in prototypeMethods) prototype2method(prototypeMethods[method]);\nmodule.exports = s;","map":{"version":3,"names":["s","value","_wrapped","VERSION","isBlank","require","stripTags","capitalize","decapitalize","chop","trim","clean","cleanDiacritics","count","chars","swapCase","escapeHTML","unescapeHTML","splice","insert","replaceAll","include","join","lines","dedent","reverse","startsWith","endsWith","pred","succ","titleize","camelize","underscored","dasherize","classify","humanize","ltrim","rtrim","truncate","prune","words","pad","lpad","rpad","lrpad","sprintf","vsprintf","toNumber","numberFormat","strRight","strRightBack","strLeft","strLeftBack","toSentence","toSentenceSerial","slugify","surround","quote","unquote","repeat","naturalCmp","levenshtein","toBoolean","exports","escapeRegExp","wrap","map","strip","lstrip","rstrip","center","rjust","ljust","contains","q","toBool","camelcase","mapChars","prototype","fn2method","key","fn","args","concat","Array","slice","call","arguments","res","apply","tap","string","prototype2method","methodName","context","String","prototypeMethods","method","module"],"sources":["C:/___spasi/frontend/node_modules/underscore.string/index.js"],"sourcesContent":["/*\n* Underscore.string\n* (c) 2010 Esa-Matti Suuronen <esa-matti aet suuronen dot org>\n* Underscore.string is freely distributable under the terms of the MIT license.\n* Documentation: https://github.com/epeli/underscore.string\n* Some code is borrowed from MooTools and Alexandru Marasteanu.\n* Version '3.3.6'\n* @preserve\n*/\n\n'use strict';\n\nfunction s(value) {\n  /* jshint validthis: true */\n  if (!(this instanceof s)) return new s(value);\n  this._wrapped = value;\n}\n\ns.VERSION = '3.3.6';\n\ns.isBlank          = require('./isBlank');\ns.stripTags        = require('./stripTags');\ns.capitalize       = require('./capitalize');\ns.decapitalize     = require('./decapitalize');\ns.chop             = require('./chop');\ns.trim             = require('./trim');\ns.clean            = require('./clean');\ns.cleanDiacritics  = require('./cleanDiacritics');\ns.count            = require('./count');\ns.chars            = require('./chars');\ns.swapCase         = require('./swapCase');\ns.escapeHTML       = require('./escapeHTML');\ns.unescapeHTML     = require('./unescapeHTML');\ns.splice           = require('./splice');\ns.insert           = require('./insert');\ns.replaceAll       = require('./replaceAll');\ns.include          = require('./include');\ns.join             = require('./join');\ns.lines            = require('./lines');\ns.dedent           = require('./dedent');\ns.reverse          = require('./reverse');\ns.startsWith       = require('./startsWith');\ns.endsWith         = require('./endsWith');\ns.pred             = require('./pred');\ns.succ             = require('./succ');\ns.titleize         = require('./titleize');\ns.camelize         = require('./camelize');\ns.underscored      = require('./underscored');\ns.dasherize        = require('./dasherize');\ns.classify         = require('./classify');\ns.humanize         = require('./humanize');\ns.ltrim            = require('./ltrim');\ns.rtrim            = require('./rtrim');\ns.truncate         = require('./truncate');\ns.prune            = require('./prune');\ns.words            = require('./words');\ns.pad              = require('./pad');\ns.lpad             = require('./lpad');\ns.rpad             = require('./rpad');\ns.lrpad            = require('./lrpad');\ns.sprintf          = require('./sprintf');\ns.vsprintf         = require('./vsprintf');\ns.toNumber         = require('./toNumber');\ns.numberFormat     = require('./numberFormat');\ns.strRight         = require('./strRight');\ns.strRightBack     = require('./strRightBack');\ns.strLeft          = require('./strLeft');\ns.strLeftBack      = require('./strLeftBack');\ns.toSentence       = require('./toSentence');\ns.toSentenceSerial = require('./toSentenceSerial');\ns.slugify          = require('./slugify');\ns.surround         = require('./surround');\ns.quote            = require('./quote');\ns.unquote          = require('./unquote');\ns.repeat           = require('./repeat');\ns.naturalCmp       = require('./naturalCmp');\ns.levenshtein      = require('./levenshtein');\ns.toBoolean        = require('./toBoolean');\ns.exports          = require('./exports');\ns.escapeRegExp     = require('./helper/escapeRegExp');\ns.wrap             = require('./wrap');\ns.map              = require('./map');\n\n// Aliases\ns.strip     = s.trim;\ns.lstrip    = s.ltrim;\ns.rstrip    = s.rtrim;\ns.center    = s.lrpad;\ns.rjust     = s.lpad;\ns.ljust     = s.rpad;\ns.contains  = s.include;\ns.q         = s.quote;\ns.toBool    = s.toBoolean;\ns.camelcase = s.camelize;\ns.mapChars  = s.map;\n\n\n// Implement chaining\ns.prototype = {\n  value: function value() {\n    return this._wrapped;\n  }\n};\n\nfunction fn2method(key, fn) {\n  if (typeof fn !== 'function') return;\n  s.prototype[key] = function() {\n    var args = [this._wrapped].concat(Array.prototype.slice.call(arguments));\n    var res = fn.apply(null, args);\n    // if the result is non-string stop the chain and return the value\n    return typeof res === 'string' ? new s(res) : res;\n  };\n}\n\n// Copy functions to instance methods for chaining\nfor (var key in s) fn2method(key, s[key]);\n\nfn2method('tap', function tap(string, fn) {\n  return fn(string);\n});\n\nfunction prototype2method(methodName) {\n  fn2method(methodName, function(context) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return String.prototype[methodName].apply(context, args);\n  });\n}\n\nvar prototypeMethods = [\n  'toUpperCase',\n  'toLowerCase',\n  'split',\n  'replace',\n  'slice',\n  'substring',\n  'substr',\n  'concat'\n];\n\nfor (var method in prototypeMethods) prototype2method(prototypeMethods[method]);\n\n\nmodule.exports = s;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}