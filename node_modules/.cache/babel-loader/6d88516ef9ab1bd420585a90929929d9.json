{"ast":null,"code":"import { createStore, compose, applyMiddleware } from \"redux\";\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\n// 'routerMiddleware': the new way of storing route changes with redux middleware since rrV4.\nimport { routerMiddleware } from \"react-router-redux\";\nimport rootReducer from \"./modules/reducers\";\nexport const history = createBrowserHistory();\nfunction configureStoreProd(initialState) {\n  const reactRouterMiddleware = routerMiddleware(history);\n  const middlewares = [\n  // Add other middleware on this line...\n\n  // thunk middleware can also accept an extra argument to be passed to each thunk action\n  // https://github.com/gaearon/redux-thunk#injecting-a-custom-argument\n  thunk, reactRouterMiddleware];\n  return createStore(rootReducer, initialState, compose(applyMiddleware(...middlewares)));\n}\nfunction configureStoreDev(initialState) {\n  const reactRouterMiddleware = routerMiddleware(history);\n  const middlewares = [\n  // Add other middleware on this line...\n\n  // Redux middleware that spits an error on you when you try to mutate your state either inside a dispatch or between dispatches.\n  reduxImmutableStateInvariant(),\n  // thunk middleware can also accept an extra argument to be passed to each thunk action\n  // https://github.com/gaearon/redux-thunk#injecting-a-custom-argument\n  thunk, reactRouterMiddleware];\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n  const store = createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n  return store;\n}\nexport const configureStore = !process.env.DEV ? configureStoreProd : configureStoreDev;","map":{"version":3,"names":["createStore","compose","applyMiddleware","reduxImmutableStateInvariant","thunk","createBrowserHistory","routerMiddleware","rootReducer","history","configureStoreProd","initialState","reactRouterMiddleware","middlewares","configureStoreDev","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","configureStore","process","env","DEV"],"sources":["C:/___spasi/frontend/src/store.js"],"sourcesContent":["import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createBrowserHistory } from \"history\";\r\n// 'routerMiddleware': the new way of storing route changes with redux middleware since rrV4.\r\nimport { routerMiddleware } from \"react-router-redux\";\r\nimport rootReducer from \"./modules/reducers\";\r\nexport const history = createBrowserHistory();\r\nfunction configureStoreProd(initialState) {\r\n  const reactRouterMiddleware = routerMiddleware(history);\r\n  const middlewares = [\r\n    // Add other middleware on this line...\r\n\r\n    // thunk middleware can also accept an extra argument to be passed to each thunk action\r\n    // https://github.com/gaearon/redux-thunk#injecting-a-custom-argument\r\n    thunk,\r\n    reactRouterMiddleware,\r\n  ];\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middlewares))\r\n  );\r\n}\r\n\r\nfunction configureStoreDev(initialState) {\r\n  const reactRouterMiddleware = routerMiddleware(history);\r\n  const middlewares = [\r\n    // Add other middleware on this line...\r\n\r\n    // Redux middleware that spits an error on you when you try to mutate your state either inside a dispatch or between dispatches.\r\n    reduxImmutableStateInvariant(),\r\n\r\n    // thunk middleware can also accept an extra argument to be passed to each thunk action\r\n    // https://github.com/gaearon/redux-thunk#injecting-a-custom-argument\r\n    thunk,\r\n    reactRouterMiddleware,\r\n  ];\r\n\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n  );\r\n\r\n  return store;\r\n}\r\n\r\nexport const configureStore = !process.env.DEV\r\n  ? configureStoreProd\r\n  : configureStoreDev;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,EAAEC,eAAe,QAAQ,OAAO;AAC7D,OAAOC,4BAA4B,MAAM,iCAAiC;AAC1E,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,oBAAoB,QAAQ,SAAS;AAC9C;AACA,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAO,MAAMC,OAAO,GAAGH,oBAAoB,EAAE;AAC7C,SAASI,kBAAkBA,CAACC,YAAY,EAAE;EACxC,MAAMC,qBAAqB,GAAGL,gBAAgB,CAACE,OAAO,CAAC;EACvD,MAAMI,WAAW,GAAG;EAClB;;EAEA;EACA;EACAR,KAAK,EACLO,qBAAqB,CACtB;EAED,OAAOX,WAAW,CAChBO,WAAW,EACXG,YAAY,EACZT,OAAO,CAACC,eAAe,CAAC,GAAGU,WAAW,CAAC,CAAC,CACzC;AACH;AAEA,SAASC,iBAAiBA,CAACH,YAAY,EAAE;EACvC,MAAMC,qBAAqB,GAAGL,gBAAgB,CAACE,OAAO,CAAC;EACvD,MAAMI,WAAW,GAAG;EAClB;;EAEA;EACAT,4BAA4B,EAAE;EAE9B;EACA;EACAC,KAAK,EACLO,qBAAqB,CACtB;EAED,MAAMG,gBAAgB,GACpBC,MAAM,CAACC,oCAAoC,IAAIf,OAAO,CAAC,CAAC;EAC1D,MAAMgB,KAAK,GAAGjB,WAAW,CACvBO,WAAW,EACXG,YAAY,EACZI,gBAAgB,CAACZ,eAAe,CAAC,GAAGU,WAAW,CAAC,CAAC,CAClD;EAED,OAAOK,KAAK;AACd;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,GAAG,GAC1CZ,kBAAkB,GAClBI,iBAAiB"},"metadata":{},"sourceType":"module"}