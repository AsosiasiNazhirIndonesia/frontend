{"ast":null,"code":"/**\n * _s.prune: a more elegant version of truncate\n * prune extra chars, never leaving a half-chopped word.\n * @author github.com/rwz\n */\nvar makeString = require('./helper/makeString');\nvar rtrim = require('./rtrim');\nmodule.exports = function prune(str, length, pruneStr) {\n  str = makeString(str);\n  length = ~~length;\n  pruneStr = pruneStr != null ? String(pruneStr) : '...';\n  if (str.length <= length) return str;\n  var tmpl = function (c) {\n      return c.toUpperCase() !== c.toLowerCase() ? 'A' : ' ';\n    },\n    template = str.slice(0, length + 1).replace(/.(?=\\W*\\w*$)/g, tmpl); // 'Hello, world' -> 'HellAA AAAAA'\n\n  if (template.slice(template.length - 2).match(/\\w\\w/)) template = template.replace(/\\s*\\S+$/, '');else template = rtrim(template.slice(0, template.length - 1));\n  return (template + pruneStr).length > str.length ? str : str.slice(0, template.length) + pruneStr;\n};","map":{"version":3,"names":["makeString","require","rtrim","module","exports","prune","str","length","pruneStr","String","tmpl","c","toUpperCase","toLowerCase","template","slice","replace","match"],"sources":["C:/___spasi/frontend/node_modules/underscore.string/prune.js"],"sourcesContent":["/**\n * _s.prune: a more elegant version of truncate\n * prune extra chars, never leaving a half-chopped word.\n * @author github.com/rwz\n */\nvar makeString = require('./helper/makeString');\nvar rtrim = require('./rtrim');\n\nmodule.exports = function prune(str, length, pruneStr) {\n  str = makeString(str);\n  length = ~~length;\n  pruneStr = pruneStr != null ? String(pruneStr) : '...';\n\n  if (str.length <= length) return str;\n\n  var tmpl = function(c) {\n      return c.toUpperCase() !== c.toLowerCase() ? 'A' : ' ';\n    },\n    template = str.slice(0, length + 1).replace(/.(?=\\W*\\w*$)/g, tmpl); // 'Hello, world' -> 'HellAA AAAAA'\n\n  if (template.slice(template.length - 2).match(/\\w\\w/))\n    template = template.replace(/\\s*\\S+$/, '');\n  else\n    template = rtrim(template.slice(0, template.length - 1));\n\n  return (template + pruneStr).length > str.length ? str : str.slice(0, template.length) + pruneStr;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC/C,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;AAE9BE,MAAM,CAACC,OAAO,GAAG,SAASC,KAAKA,CAACC,GAAG,EAAEC,MAAM,EAAEC,QAAQ,EAAE;EACrDF,GAAG,GAAGN,UAAU,CAACM,GAAG,CAAC;EACrBC,MAAM,GAAG,CAAC,CAACA,MAAM;EACjBC,QAAQ,GAAGA,QAAQ,IAAI,IAAI,GAAGC,MAAM,CAACD,QAAQ,CAAC,GAAG,KAAK;EAEtD,IAAIF,GAAG,CAACC,MAAM,IAAIA,MAAM,EAAE,OAAOD,GAAG;EAEpC,IAAII,IAAI,GAAG,SAAAA,CAASC,CAAC,EAAE;MACnB,OAAOA,CAAC,CAACC,WAAW,EAAE,KAAKD,CAAC,CAACE,WAAW,EAAE,GAAG,GAAG,GAAG,GAAG;IACxD,CAAC;IACDC,QAAQ,GAAGR,GAAG,CAACS,KAAK,CAAC,CAAC,EAAER,MAAM,GAAG,CAAC,CAAC,CAACS,OAAO,CAAC,eAAe,EAAEN,IAAI,CAAC,CAAC,CAAC;;EAEtE,IAAII,QAAQ,CAACC,KAAK,CAACD,QAAQ,CAACP,MAAM,GAAG,CAAC,CAAC,CAACU,KAAK,CAAC,MAAM,CAAC,EACnDH,QAAQ,GAAGA,QAAQ,CAACE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,KAE3CF,QAAQ,GAAGZ,KAAK,CAACY,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAED,QAAQ,CAACP,MAAM,GAAG,CAAC,CAAC,CAAC;EAE1D,OAAO,CAACO,QAAQ,GAAGN,QAAQ,EAAED,MAAM,GAAGD,GAAG,CAACC,MAAM,GAAGD,GAAG,GAAGA,GAAG,CAACS,KAAK,CAAC,CAAC,EAAED,QAAQ,CAACP,MAAM,CAAC,GAAGC,QAAQ;AACnG,CAAC"},"metadata":{},"sourceType":"script"}