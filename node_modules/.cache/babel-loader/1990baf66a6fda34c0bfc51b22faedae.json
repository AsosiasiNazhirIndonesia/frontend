{"ast":null,"code":"var te = Object.create;\nvar D = Object.defineProperty;\nvar ne = Object.getOwnPropertyDescriptor;\nvar ie = Object.getOwnPropertyNames;\nvar ae = Object.getPrototypeOf,\n  oe = Object.prototype.hasOwnProperty;\nvar H = (n, r) => () => (r || n((r = {\n  exports: {}\n}).exports, r), r.exports);\nvar se = (n, r, s, m) => {\n  if (r && typeof r == \"object\" || typeof r == \"function\") for (let h of ie(r)) !oe.call(n, h) && h !== s && D(n, h, {\n    get: () => r[h],\n    enumerable: !(m = ne(r, h)) || m.enumerable\n  });\n  return n;\n};\nvar T = (n, r, s) => (s = n != null ? te(ae(n)) : {}, se(r || !n || !n.__esModule ? D(s, \"default\", {\n  value: n,\n  enumerable: !0\n}) : s, n));\nvar C = (n, r, s) => new Promise((m, h) => {\n  var w = p => {\n      try {\n        d(s.next(p));\n      } catch (u) {\n        h(u);\n      }\n    },\n    R = p => {\n      try {\n        d(s.throw(p));\n      } catch (u) {\n        h(u);\n      }\n    },\n    d = p => p.done ? m(p.value) : Promise.resolve(p.value).then(w, R);\n  d((s = s.apply(n, r)).next());\n});\nvar k = H((I, F) => {\n  (function (n, r) {\n    typeof I == \"object\" ? F.exports = I = r() : typeof define == \"function\" && define.amd ? define([], r) : n.CryptoJS = r();\n  })(I, function () {\n    var n = n || function (r, s) {\n      var m = Object.create || function () {\n          function e() {}\n          return function (t) {\n            var c;\n            return e.prototype = t, c = new e(), e.prototype = null, c;\n          };\n        }(),\n        h = {},\n        w = h.lib = {},\n        R = w.Base = function () {\n          return {\n            extend: function (e) {\n              var t = m(this);\n              return e && t.mixIn(e), (!t.hasOwnProperty(\"init\") || this.init === t.init) && (t.init = function () {\n                t.$super.init.apply(this, arguments);\n              }), t.init.prototype = t, t.$super = this, t;\n            },\n            create: function () {\n              var e = this.extend();\n              return e.init.apply(e, arguments), e;\n            },\n            init: function () {},\n            mixIn: function (e) {\n              for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);\n              e.hasOwnProperty(\"toString\") && (this.toString = e.toString);\n            },\n            clone: function () {\n              return this.init.prototype.extend(this);\n            }\n          };\n        }(),\n        d = w.WordArray = R.extend({\n          init: function (e, t) {\n            e = this.words = e || [], t != s ? this.sigBytes = t : this.sigBytes = e.length * 4;\n          },\n          toString: function (e) {\n            return (e || u).stringify(this);\n          },\n          concat: function (e) {\n            var t = this.words,\n              c = e.words,\n              i = this.sigBytes,\n              g = e.sigBytes;\n            if (this.clamp(), i % 4) for (var v = 0; v < g; v++) {\n              var b = c[v >>> 2] >>> 24 - v % 4 * 8 & 255;\n              t[i + v >>> 2] |= b << 24 - (i + v) % 4 * 8;\n            } else for (var v = 0; v < g; v += 4) t[i + v >>> 2] = c[v >>> 2];\n            return this.sigBytes += g, this;\n          },\n          clamp: function () {\n            var e = this.words,\n              t = this.sigBytes;\n            e[t >>> 2] &= 4294967295 << 32 - t % 4 * 8, e.length = r.ceil(t / 4);\n          },\n          clone: function () {\n            var e = R.clone.call(this);\n            return e.words = this.words.slice(0), e;\n          },\n          random: function (e) {\n            for (var t = [], c = function (y) {\n                var y = y,\n                  A = 987654321,\n                  B = 4294967295;\n                return function () {\n                  A = 36969 * (A & 65535) + (A >> 16) & B, y = 18e3 * (y & 65535) + (y >> 16) & B;\n                  var x = (A << 16) + y & B;\n                  return x /= 4294967296, x += .5, x * (r.random() > .5 ? 1 : -1);\n                };\n              }, i = 0, g; i < e; i += 4) {\n              var v = c((g || r.random()) * 4294967296);\n              g = v() * 987654071, t.push(v() * 4294967296 | 0);\n            }\n            return new d.init(t, e);\n          }\n        }),\n        p = h.enc = {},\n        u = p.Hex = {\n          stringify: function (e) {\n            for (var t = e.words, c = e.sigBytes, i = [], g = 0; g < c; g++) {\n              var v = t[g >>> 2] >>> 24 - g % 4 * 8 & 255;\n              i.push((v >>> 4).toString(16)), i.push((v & 15).toString(16));\n            }\n            return i.join(\"\");\n          },\n          parse: function (e) {\n            for (var t = e.length, c = [], i = 0; i < t; i += 2) c[i >>> 3] |= parseInt(e.substr(i, 2), 16) << 24 - i % 8 * 4;\n            return new d.init(c, t / 2);\n          }\n        },\n        _ = p.Latin1 = {\n          stringify: function (e) {\n            for (var t = e.words, c = e.sigBytes, i = [], g = 0; g < c; g++) {\n              var v = t[g >>> 2] >>> 24 - g % 4 * 8 & 255;\n              i.push(String.fromCharCode(v));\n            }\n            return i.join(\"\");\n          },\n          parse: function (e) {\n            for (var t = e.length, c = [], i = 0; i < t; i++) c[i >>> 2] |= (e.charCodeAt(i) & 255) << 24 - i % 4 * 8;\n            return new d.init(c, t);\n          }\n        },\n        a = p.Utf8 = {\n          stringify: function (e) {\n            try {\n              return decodeURIComponent(escape(_.stringify(e)));\n            } catch {\n              throw new Error(\"Malformed UTF-8 data\");\n            }\n          },\n          parse: function (e) {\n            return _.parse(unescape(encodeURIComponent(e)));\n          }\n        },\n        f = w.BufferedBlockAlgorithm = R.extend({\n          reset: function () {\n            this._data = new d.init(), this._nDataBytes = 0;\n          },\n          _append: function (e) {\n            typeof e == \"string\" && (e = a.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes;\n          },\n          _process: function (e) {\n            var t = this._data,\n              c = t.words,\n              i = t.sigBytes,\n              g = this.blockSize,\n              v = g * 4,\n              b = i / v;\n            e ? b = r.ceil(b) : b = r.max((b | 0) - this._minBufferSize, 0);\n            var y = b * g,\n              A = r.min(y * 4, i);\n            if (y) {\n              for (var B = 0; B < y; B += g) this._doProcessBlock(c, B);\n              var x = c.splice(0, y);\n              t.sigBytes -= A;\n            }\n            return new d.init(x, A);\n          },\n          clone: function () {\n            var e = R.clone.call(this);\n            return e._data = this._data.clone(), e;\n          },\n          _minBufferSize: 0\n        }),\n        o = w.Hasher = f.extend({\n          cfg: R.extend(),\n          init: function (e) {\n            this.cfg = this.cfg.extend(e), this.reset();\n          },\n          reset: function () {\n            f.reset.call(this), this._doReset();\n          },\n          update: function (e) {\n            return this._append(e), this._process(), this;\n          },\n          finalize: function (e) {\n            e && this._append(e);\n            var t = this._doFinalize();\n            return t;\n          },\n          blockSize: 512 / 32,\n          _createHelper: function (e) {\n            return function (t, c) {\n              return new e.init(c).finalize(t);\n            };\n          },\n          _createHmacHelper: function (e) {\n            return function (t, c) {\n              return new l.HMAC.init(e, c).finalize(t);\n            };\n          }\n        }),\n        l = h.algo = {};\n      return h;\n    }(Math);\n    return n;\n  });\n});\nvar z = H((S, W) => {\n  (function (n, r) {\n    typeof S == \"object\" ? W.exports = S = r(k()) : typeof define == \"function\" && define.amd ? define([\"./core\"], r) : r(n.CryptoJS);\n  })(S, function (n) {\n    return function (r) {\n      var s = n,\n        m = s.lib,\n        h = m.WordArray,\n        w = m.Hasher,\n        R = s.algo,\n        d = [],\n        p = [];\n      (function () {\n        function a(e) {\n          for (var t = r.sqrt(e), c = 2; c <= t; c++) if (!(e % c)) return !1;\n          return !0;\n        }\n        function f(e) {\n          return (e - (e | 0)) * 4294967296 | 0;\n        }\n        for (var o = 2, l = 0; l < 64;) a(o) && (l < 8 && (d[l] = f(r.pow(o, 1 / 2))), p[l] = f(r.pow(o, 1 / 3)), l++), o++;\n      })();\n      var u = [],\n        _ = R.SHA256 = w.extend({\n          _doReset: function () {\n            this._hash = new h.init(d.slice(0));\n          },\n          _doProcessBlock: function (a, f) {\n            for (var o = this._hash.words, l = o[0], e = o[1], t = o[2], c = o[3], i = o[4], g = o[5], v = o[6], b = o[7], y = 0; y < 64; y++) {\n              if (y < 16) u[y] = a[f + y] | 0;else {\n                var A = u[y - 15],\n                  B = (A << 25 | A >>> 7) ^ (A << 14 | A >>> 18) ^ A >>> 3,\n                  x = u[y - 2],\n                  G = (x << 15 | x >>> 17) ^ (x << 13 | x >>> 19) ^ x >>> 10;\n                u[y] = B + u[y - 7] + G + u[y - 16];\n              }\n              var Q = i & g ^ ~i & v,\n                X = l & e ^ l & t ^ e & t,\n                Z = (l << 30 | l >>> 2) ^ (l << 19 | l >>> 13) ^ (l << 10 | l >>> 22),\n                ee = (i << 26 | i >>> 6) ^ (i << 21 | i >>> 11) ^ (i << 7 | i >>> 25),\n                P = b + ee + Q + p[y] + u[y],\n                re = Z + X;\n              b = v, v = g, g = i, i = c + P | 0, c = t, t = e, e = l, l = P + re | 0;\n            }\n            o[0] = o[0] + l | 0, o[1] = o[1] + e | 0, o[2] = o[2] + t | 0, o[3] = o[3] + c | 0, o[4] = o[4] + i | 0, o[5] = o[5] + g | 0, o[6] = o[6] + v | 0, o[7] = o[7] + b | 0;\n          },\n          _doFinalize: function () {\n            var a = this._data,\n              f = a.words,\n              o = this._nDataBytes * 8,\n              l = a.sigBytes * 8;\n            return f[l >>> 5] |= 128 << 24 - l % 32, f[(l + 64 >>> 9 << 4) + 14] = r.floor(o / 4294967296), f[(l + 64 >>> 9 << 4) + 15] = o, a.sigBytes = f.length * 4, this._process(), this._hash;\n          },\n          clone: function () {\n            var a = w.clone.call(this);\n            return a._hash = this._hash.clone(), a;\n          }\n        });\n      s.SHA256 = w._createHelper(_), s.HmacSHA256 = w._createHmacHelper(_);\n    }(Math), n.SHA256;\n  });\n});\nvar q = H((U, L) => {\n  (function (n, r) {\n    typeof U == \"object\" ? L.exports = U = r(k()) : typeof define == \"function\" && define.amd ? define([\"./core\"], r) : r(n.CryptoJS);\n  })(U, function (n) {\n    return function () {\n      var r = n,\n        s = r.lib,\n        m = s.WordArray,\n        h = r.enc,\n        w = h.Base64 = {\n          stringify: function (d) {\n            var p = d.words,\n              u = d.sigBytes,\n              _ = this._map;\n            d.clamp();\n            for (var a = [], f = 0; f < u; f += 3) for (var o = p[f >>> 2] >>> 24 - f % 4 * 8 & 255, l = p[f + 1 >>> 2] >>> 24 - (f + 1) % 4 * 8 & 255, e = p[f + 2 >>> 2] >>> 24 - (f + 2) % 4 * 8 & 255, t = o << 16 | l << 8 | e, c = 0; c < 4 && f + c * .75 < u; c++) a.push(_.charAt(t >>> 6 * (3 - c) & 63));\n            var i = _.charAt(64);\n            if (i) for (; a.length % 4;) a.push(i);\n            return a.join(\"\");\n          },\n          parse: function (d) {\n            var p = d.length,\n              u = this._map,\n              _ = this._reverseMap;\n            if (!_) {\n              _ = this._reverseMap = [];\n              for (var a = 0; a < u.length; a++) _[u.charCodeAt(a)] = a;\n            }\n            var f = u.charAt(64);\n            if (f) {\n              var o = d.indexOf(f);\n              o !== -1 && (p = o);\n            }\n            return R(d, p, _);\n          },\n          _map: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"\n        };\n      function R(d, p, u) {\n        for (var _ = [], a = 0, f = 0; f < p; f++) if (f % 4) {\n          var o = u[d.charCodeAt(f - 1)] << f % 4 * 2,\n            l = u[d.charCodeAt(f)] >>> 6 - f % 4 * 2;\n          _[a >>> 2] |= (o | l) << 24 - a % 4 * 8, a++;\n        }\n        return m.create(_, a);\n      }\n    }(), n.enc.Base64;\n  });\n});\nimport { Extension as le } from \"magic-sdk\";\nvar E = (r => (r.ParseRedirectResult = \"magic_oauth_parse_redirect_result\", r))(E || {}),\n  ce = (a => (a.InvalidRequest = \"invalid_request\", a.InvalidClient = \"invalid_client\", a.InvalidScope = \"invalid_scope\", a.InvalidGrant = \"invalid_grant\", a.UnauthorizedClient = \"unauthorized_client\", a.UnsupportedResponseType = \"unsupported_response_type\", a.UnsupportedGrantType = \"unsupported_grant_type\", a.UnsupportedTokenType = \"unsupported_token_type\", a.AccessDenied = \"access_denied\", a.ServerError = \"server_error\", a.TemporarilyUnavailable = \"temporarily_unavailable\", a))(ce || {});\nvar j = T(z()),\n  J = T(q());\nvar $ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~\",\n  V = typeof window != \"undefined\" && !!window.crypto,\n  fe = V && !!window.crypto.subtle;\nfunction ue(n) {\n  return Array.from(n).map(r => $[r % $.length]).join(\"\");\n}\nfunction M(n) {\n  let r = s => s.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  if (n instanceof ArrayBuffer) {\n    let s = new Uint8Array(n),\n      m = Array.from(s).map(w => String.fromCharCode(w)).join(\"\"),\n      h = btoa(m);\n    return r(h);\n  }\n  return r(J.default.stringify(n));\n}\nfunction de(n) {\n  return C(this, null, function* () {\n    if (fe) {\n      let r = new TextEncoder().encode(n);\n      return crypto.subtle.digest(\"SHA-256\", r).then(M);\n    }\n    return M((0, j.default)(n));\n  });\n}\nfunction N(n) {\n  let r = new Uint8Array(n);\n  if (V) window.crypto.getRandomValues(r);else for (let s = 0; s < n; s += 1) r[s] = Math.floor(Math.random() * Math.floor(255));\n  return ue(r);\n}\nfunction K() {\n  return C(this, null, function* () {\n    let n = N(128),\n      r = N(128),\n      s = yield de(r);\n    return {\n      verifier: r,\n      challenge: s,\n      state: n\n    };\n  });\n}\nvar Y = class extends le.Internal {\n    constructor() {\n      super(...arguments);\n      this.name = \"oauth\";\n      this.config = {};\n      this.compat = {\n        \"magic-sdk\": \">=2.4.6\",\n        \"@magic-sdk/react-native\": !1,\n        \"@magic-sdk/react-native-bare\": !1,\n        \"@magic-sdk/react-native-expo\": !1\n      };\n    }\n    loginWithRedirect(s) {\n      return this.utils.createPromiEvent(m => C(this, null, function* () {\n        let {\n          provider: h,\n          query: w\n        } = yield pe.call(this, s);\n        window.location.href = new URL(`/v1/oauth2/${h}/start?${w}`, this.sdk.endpoint).href, m();\n      }));\n    }\n    getRedirectResult() {\n      let s = window.location.search,\n        m = window.location.origin + window.location.pathname;\n      return window.history.replaceState(null, \"\", m), he.call(this, s);\n    }\n  },\n  O = \"oauth_redirect_metadata\";\nfunction pe(n) {\n  return C(this, null, function* () {\n    yield this.utils.storage.removeItem(O);\n    let {\n        provider: r,\n        redirectURI: s,\n        scope: m,\n        loginHint: h\n      } = n,\n      {\n        verifier: w,\n        challenge: R,\n        state: d\n      } = yield K(),\n      p = JSON.stringify({\n        verifier: w,\n        state: d\n      });\n    return yield this.utils.storage.setItem(O, p), {\n      query: [`magic_api_key=${encodeURIComponent(this.sdk.apiKey)}`, `magic_challenge=${encodeURIComponent(R)}`, `state=${encodeURIComponent(d)}`, `platform=${encodeURIComponent(\"web\")}`, m && `scope=${encodeURIComponent(m.join(\" \"))}`, s && `redirect_uri=${encodeURIComponent(s)}`, h && `login_hint=${encodeURIComponent(h)}`].reduce((_, a) => a ? `${_}&${a}` : _),\n      provider: r,\n      redirectURI: s\n    };\n  });\n}\nfunction he(n) {\n  return this.utils.createPromiEvent((r, s) => C(this, null, function* () {\n    var _;\n    let m = yield this.utils.storage.getItem(O),\n      {\n        verifier: h,\n        state: w\n      } = JSON.parse(m);\n    this.utils.storage.removeItem(O);\n    let R = this.utils.createJsonRpcRequestPayload(\"magic_oauth_parse_redirect_result\", [n, h, w]),\n      d = yield this.request(R),\n      p = d,\n      u = d;\n    u.error && s(this.createError(u.error, (_ = u.error_description) != null ? _ : \"An error occurred.\", {\n      errorURI: u.error_uri,\n      provider: u.provider\n    })), r(p);\n  }));\n}\nexport { ce as OAuthErrorCode, Y as OAuthExtension, E as OAuthPayloadMethods };","map":{"version":3,"sources":["../../node_modules/crypto-js/core.js","../../node_modules/crypto-js/sha256.js","../../node_modules/crypto-js/enc-base64.js","../../src/index.ts","../../src/types.ts","../../src/crypto.ts"],"names":["root","factory","exports","module","CryptoJS","Math","undefined","create","F","obj","subtype","C","C_lib","Base","overrides","instance","properties","propertyName","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","i","thatByte","clone","nBytes","r","m_w","m_z","mask","result","rcache","_r","C_enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","Utf8","utf8Str","BufferedBlockAlgorithm","data","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","nWordsReady","nBytesReady","offset","processedWords","Hasher","cfg","messageUpdate","hash","hasher","message","key","C_algo","H","K","isPrime","n","sqrtN","factor","getFractionalBits","nPrime","W","SHA256","M","a","b","c","d","e","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","nBitsTotal","nBitsLeft","Base64","map","base64Chars","byte1","byte2","byte3","triplet","j","paddingChar","base64Str","base64StrLength","reverseMap","paddingIndex","parseLoop","bits1","bits2","OAuthExtension","Extension","configuration","resolve","__async","createURI","provider","query","queryString","urlWithoutQuery","getResult","OAUTH_REDIRECT_METADATA_KEY","createCryptoChallenge","storedData","challenge","state","scope","redirectURI","loginHint","prev","next","reject","json","parseRedirectResult","verifier","resultOrError","maybeResult","maybeError","_a","OAuthPayloadMethods","OAuthErrorCode","import_enc_base64","CHARSET","HAS_CRYPTO","HAS_SUBTLE_CRYPTO","bytesToVerifierString","bytes","value","base64URLEncodeFromByteArray","arg","makeURLSafe","base64","utf8Binary","sha256","createRandomString","size"],"mappings":"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","sourcesContent":[";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { Extension } from 'magic-sdk';\nimport {\n  OAuthErrorData,\n  OAuthPayloadMethods,\n  OAuthRedirectError,\n  OAuthRedirectResult,\n  OAuthRedirectConfiguration,\n} from './types';\nimport { createCryptoChallenge } from './crypto';\n\nexport class OAuthExtension extends Extension.Internal<'oauth'> {\n  name = 'oauth' as const;\n  config = {};\n  compat = {\n    'magic-sdk': '>=2.4.6',\n    '@magic-sdk/react-native': false,\n    '@magic-sdk/react-native-bare': false,\n    '@magic-sdk/react-native-expo': false,\n  };\n\n  public loginWithRedirect(configuration: OAuthRedirectConfiguration) {\n    return this.utils.createPromiEvent<void>(async (resolve) => {\n      const { provider, query } = await createURI.call(this, configuration);\n\n      // @ts-ignore - this.sdk.endpoint is marked protected but we need to access it.\n      window.location.href = new URL(`/v1/oauth2/${provider}/start?${query}`, this.sdk.endpoint).href;\n\n      resolve();\n    });\n  }\n\n  public getRedirectResult() {\n    const queryString = window.location.search;\n\n    // Remove the query from the redirect callback as a precaution to prevent\n    // malicious parties from parsing it before we have a chance to use it.\n    const urlWithoutQuery = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, '', urlWithoutQuery);\n\n    return getResult.call(this, queryString);\n  }\n}\n\nconst OAUTH_REDIRECT_METADATA_KEY = 'oauth_redirect_metadata';\n\nasync function createURI(this: OAuthExtension, configuration: OAuthRedirectConfiguration) {\n  // Bust any old, in-progress OAuth flows.\n  await this.utils.storage.removeItem(OAUTH_REDIRECT_METADATA_KEY);\n\n  // Unpack configuration, generate crypto values, and persist to storage.\n  const { provider, redirectURI, scope, loginHint } = configuration;\n  const { verifier, challenge, state } = await createCryptoChallenge();\n\n  /* Stringify for RN Async storage */\n  const storedData = JSON.stringify({\n    verifier,\n    state,\n  });\n\n  await this.utils.storage.setItem(OAUTH_REDIRECT_METADATA_KEY, storedData);\n\n  // Formulate the initial redirect query to Magic's OAuth hub.\n  // Required fields:\n  //   - `magic_api_key`\n  //   - `magic_challenge`\n  //   - `state`\n  //   - `redirect_uri`\n  //   - `platform`\n\n  const query = [\n    `magic_api_key=${encodeURIComponent(this.sdk.apiKey)}`,\n    `magic_challenge=${encodeURIComponent(challenge)}`,\n    `state=${encodeURIComponent(state)}`,\n    `platform=${encodeURIComponent('web')}`,\n    scope && `scope=${encodeURIComponent(scope.join(' '))}`,\n    redirectURI && `redirect_uri=${encodeURIComponent(redirectURI)}`,\n    loginHint && `login_hint=${encodeURIComponent(loginHint)}`,\n  ].reduce((prev, next) => (next ? `${prev}&${next}` : prev));\n\n  return {\n    query,\n    provider,\n    redirectURI,\n  };\n}\n\nfunction getResult(this: OAuthExtension, queryString: string) {\n  return this.utils.createPromiEvent<OAuthRedirectResult>(async (resolve, reject) => {\n    const json: string = (await this.utils.storage.getItem(OAUTH_REDIRECT_METADATA_KEY)) as string;\n\n    const { verifier, state } = JSON.parse(json);\n\n    // Remove the save OAuth state from storage, it stays in memory now...\n    this.utils.storage.removeItem(OAUTH_REDIRECT_METADATA_KEY);\n\n    const parseRedirectResult = this.utils.createJsonRpcRequestPayload(OAuthPayloadMethods.ParseRedirectResult, [\n      queryString,\n      verifier,\n      state,\n    ]);\n\n    // Parse the result, which may contain an OAuth-formatted error.\n    const resultOrError = await this.request<OAuthRedirectResult | OAuthRedirectError>(parseRedirectResult);\n    const maybeResult = resultOrError as OAuthRedirectResult;\n    const maybeError = resultOrError as OAuthRedirectError;\n\n    if (maybeError.error) {\n      reject(\n        this.createError<OAuthErrorData>(maybeError.error, maybeError.error_description ?? 'An error occurred.', {\n          errorURI: maybeError.error_uri,\n          provider: maybeError.provider,\n        }),\n      );\n    }\n\n    resolve(maybeResult);\n  });\n}\n\nexport * from './types';\n","import { MagicUserMetadata } from '@magic-sdk/types';\n\nexport enum OAuthPayloadMethods {\n  ParseRedirectResult = 'magic_oauth_parse_redirect_result',\n}\n\nexport type OAuthProvider =\n  | 'google'\n  | 'facebook'\n  | 'apple'\n  | 'github'\n  | 'bitbucket'\n  | 'gitlab'\n  | 'linkedin'\n  | 'twitter'\n  | 'discord'\n  | 'twitch'\n  | 'microsoft';\n\nexport interface OAuthErrorData {\n  provider: OAuthProvider;\n  errorURI?: string;\n}\n\nexport interface OpenIDConnectProfile {\n  name?: string;\n  familyName?: string;\n  givenName?: string;\n  middleName?: string;\n  nickname?: string;\n  preferredUsername?: string;\n  profile?: string;\n  picture?: string;\n  website?: string;\n  gender?: string;\n  birthdate?: string;\n  zoneinfo?: string;\n  locale?: string;\n  updatedAt?: number;\n}\n\nexport interface OpenIDConnectEmail {\n  email?: string;\n  emailVerified?: boolean;\n}\n\nexport interface OpenIDConnectPhone {\n  phoneNumber?: string;\n  phoneNumberVerified?: boolean;\n}\n\nexport interface OpenIDConnectAddress {\n  address?: {\n    formatted?: string;\n    streetAddress?: string;\n    locality?: string;\n    region?: string;\n    postalCode?: string;\n    country?: string;\n  };\n}\n\nexport type OpenIDConnectUserInfo = OpenIDConnectProfile &\n  OpenIDConnectEmail &\n  OpenIDConnectPhone &\n  OpenIDConnectAddress & { sub?: string; sources?: Record<string, any> } & Record<string, any>;\n\nexport interface OAuthRedirectResult {\n  oauth: {\n    provider: OAuthProvider;\n    scope: string[];\n    accessToken: string;\n    userHandle: string;\n    userInfo: OpenIDConnectUserInfo;\n  };\n\n  magic: {\n    idToken: string;\n    userMetadata: MagicUserMetadata;\n  };\n}\n\nexport interface OAuthRedirectError {\n  provider: OAuthProvider;\n  error: string;\n  error_description?: string;\n  error_uri?: string;\n}\n\nexport interface OAuthRedirectConfiguration {\n  provider: OAuthProvider;\n  redirectURI: string;\n  scope?: string[];\n  loginHint?: string;\n}\n\nexport enum OAuthErrorCode {\n  InvalidRequest = 'invalid_request',\n  InvalidClient = 'invalid_client',\n  InvalidScope = 'invalid_scope',\n  InvalidGrant = 'invalid_grant',\n  UnauthorizedClient = 'unauthorized_client',\n  UnsupportedResponseType = 'unsupported_response_type',\n  UnsupportedGrantType = 'unsupported_grant_type',\n  UnsupportedTokenType = 'unsupported_token_type',\n  AccessDenied = 'access_denied',\n  ServerError = 'server_error',\n  TemporarilyUnavailable = 'temporarily_unavailable',\n}\n","import { WordArray } from 'crypto-js';\nimport sha256Fallback from 'crypto-js/sha256';\nimport Base64 from 'crypto-js/enc-base64';\n\nconst CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\nconst HAS_CRYPTO = typeof window !== 'undefined' && !!(window.crypto as any);\nconst HAS_SUBTLE_CRYPTO = HAS_CRYPTO && !!(window.crypto.subtle as any);\n\n/**\n * Stringifies `bytes` using the OAuth 2.0 `code_verifier` character set.\n */\nfunction bytesToVerifierString(bytes: Uint8Array) {\n  return Array.from(bytes)\n    .map((value: number) => CHARSET[value % CHARSET.length])\n    .join('');\n}\n\n/**\n * Stringifies argument (as CryptoJS `WordArray` or EcmaScript `ArrayBuffer`)\n * and encodes to URL-safe Base64.\n */\nfunction base64URLEncodeFromByteArray(wordArray: WordArray): string;\nfunction base64URLEncodeFromByteArray(arrayBuffer: ArrayBuffer): string;\nfunction base64URLEncodeFromByteArray(arg: WordArray | ArrayBuffer): string {\n  const makeURLSafe = (base64: string) => {\n    return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n  };\n\n  if (arg instanceof ArrayBuffer) {\n    const bytes = new Uint8Array(arg);\n    const utf8Binary = Array.from(bytes)\n      .map((value) => String.fromCharCode(value))\n      .join('');\n\n    const base64 = btoa(utf8Binary);\n    return makeURLSafe(base64);\n  }\n\n  return makeURLSafe(Base64.stringify(arg));\n}\n\n/**\n * Produces a SHA-256 hash of the given `message`. This function first attempts\n * to use the browser's built-in `SubtleCrypto` API, falling back to\n * CryptoJS if required.\n */\nasync function sha256(message: string) {\n  if (HAS_SUBTLE_CRYPTO) {\n    const bytes = new TextEncoder().encode(message);\n    return crypto.subtle.digest('SHA-256', bytes).then(base64URLEncodeFromByteArray);\n  }\n\n  return base64URLEncodeFromByteArray(sha256Fallback(message));\n}\n\n/**\n * Creates a cryptographically random string using the browser's built-in\n * `Crypto` API, falling back to `Math.random` if required.\n */\nfunction createRandomString(size: number) {\n  const bytes = new Uint8Array(size);\n\n  if (HAS_CRYPTO) {\n    window.crypto.getRandomValues(bytes);\n  } else {\n    for (let i = 0; i < size; i += 1) bytes[i] = Math.floor(Math.random() * Math.floor(255));\n  }\n\n  return bytesToVerifierString(bytes);\n}\n\n/**\n * Creates OAuth 2.0-compatible `code_verifier`, `code_challenge`, and `state`\n * parameters.\n */\nexport async function createCryptoChallenge() {\n  const state = createRandomString(128);\n  const verifier = createRandomString(128);\n  const challenge = await sha256(verifier);\n  return { verifier, challenge, state };\n}\n"]},"metadata":{},"sourceType":"module"}