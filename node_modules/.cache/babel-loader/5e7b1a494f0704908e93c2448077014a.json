{"ast":null,"code":"/*\r\n This file is part of web3.js.\r\n\r\n web3.js is free software: you can redistribute it and/or modify\r\n it under the terms of the GNU Lesser General Public License as published by\r\n the Free Software Foundation, either version 3 of the License, or\r\n (at your option) any later version.\r\n\r\n web3.js is distributed in the hope that it will be useful,\r\n but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n GNU Lesser General Public License for more details.\r\n\r\n You should have received a copy of the GNU Lesser General Public License\r\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n */\n/**\r\n * @file utils.js\r\n * @author Marek Kotewicz <marek@parity.io>\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\nvar ethjsUnit = require('ethjs-unit');\nvar utils = require('./utils.js');\nvar soliditySha3 = require('./soliditySha3.js');\nvar randombytes = require('randombytes');\nvar BN = require('bn.js');\n/**\r\n * Fires an error in an event emitter and callback and returns the eventemitter\r\n *\r\n * @method _fireError\r\n * @param {Object} error a string, a error, or an object with {message, data}\r\n * @param {Object} emitter\r\n * @param {Function} reject\r\n * @param {Function} callback\r\n * @param {any} optionalData\r\n * @return {Object} the emitter\r\n */\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n  /*jshint maxcomplexity: 10 */\n  // add data if given\n  if (!!error && typeof error === 'object' && !(error instanceof Error) && error.data) {\n    if (!!error.data && typeof error.data === 'object' || Array.isArray(error.data)) {\n      error.data = JSON.stringify(error.data, null, 2);\n    }\n    error = error.message + \"\\n\" + error.data;\n  }\n  if (typeof error === 'string') {\n    error = new Error(error);\n  }\n  if (typeof callback === 'function') {\n    callback(error, optionalData);\n  }\n  if (typeof reject === 'function') {\n    // suppress uncatched error if an error listener is present\n    // OR suppress uncatched error if an callback listener is present\n    if (emitter && typeof emitter.listeners === 'function' && emitter.listeners('error').length || typeof callback === 'function') {\n      emitter.catch(function () {});\n    }\n    // reject later, to be able to return emitter\n    setTimeout(function () {\n      reject(error);\n    }, 1);\n  }\n  if (emitter && typeof emitter.emit === 'function') {\n    // emit later, to be able to return emitter\n    setTimeout(function () {\n      emitter.emit('error', error, optionalData);\n      emitter.removeAllListeners();\n    }, 1);\n  }\n  return emitter;\n};\n/**\r\n * Should be used to create full function/event name from json abi\r\n *\r\n * @method _jsonInterfaceMethodToString\r\n * @param {Object} json\r\n * @return {String} full function/event name\r\n */\nvar _jsonInterfaceMethodToString = function (json) {\n  if (!!json && typeof json === 'object' && json.name && json.name.indexOf('(') !== -1) {\n    return json.name;\n  }\n  return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n/**\r\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\r\n *\r\n * @method _flattenTypes\r\n * @param {bool} includeTuple\r\n * @param {Object} puts\r\n * @return {Array} parameters as strings\r\n */\nvar _flattenTypes = function (includeTuple, puts) {\n  // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n  var types = [];\n  puts.forEach(function (param) {\n    if (typeof param.components === 'object') {\n      if (param.type.substring(0, 5) !== 'tuple') {\n        throw new Error('components found but type is not tuple; report on GitHub');\n      }\n      var suffix = '';\n      var arrayBracket = param.type.indexOf('[');\n      if (arrayBracket >= 0) {\n        suffix = param.type.substring(arrayBracket);\n      }\n      var result = _flattenTypes(includeTuple, param.components);\n      // console.log(\"result should have things: \" + result)\n      if (Array.isArray(result) && includeTuple) {\n        // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n        types.push('tuple(' + result.join(',') + ')' + suffix);\n      } else if (!includeTuple) {\n        // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n        types.push('(' + result.join(',') + ')' + suffix);\n      } else {\n        // console.log(\"its a single type within a tuple: \" + result.types)\n        types.push('(' + result + ')');\n      }\n    } else {\n      // console.log(\"its a type and not directly in a tuple: \" + param.type)\n      types.push(param.type);\n    }\n  });\n  return types;\n};\n/**\r\n * Returns a random hex string by the given bytes size\r\n *\r\n * @param {Number} size\r\n * @returns {string}\r\n */\nvar randomHex = function (size) {\n  return '0x' + randombytes(size).toString('hex');\n};\n/**\r\n * Should be called to get ascii from it's hex representation\r\n *\r\n * @method hexToAscii\r\n * @param {String} hex\r\n * @returns {String} ascii string representation of hex value\r\n */\nvar hexToAscii = function (hex) {\n  if (!utils.isHexStrict(hex)) throw new Error('The parameter must be a valid HEX string.');\n  var str = \"\";\n  var i = 0,\n    l = hex.length;\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n  return str;\n};\n/**\r\n * Should be called to get hex representation (prefixed by 0x) of ascii string\r\n *\r\n * @method asciiToHex\r\n * @param {String} str\r\n * @returns {String} hex representation of input string\r\n */\nvar asciiToHex = function (str) {\n  if (!str) return \"0x00\";\n  var hex = \"\";\n  for (var i = 0; i < str.length; i++) {\n    var code = str.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n  return \"0x\" + hex;\n};\n/**\r\n * Returns value of unit in Wei\r\n *\r\n * @method getUnitValue\r\n * @param {String} unit the unit to convert to, default ether\r\n * @returns {BN} value of the unit (in Wei)\r\n * @throws error if the unit is not correct:w\r\n */\nvar getUnitValue = function (unit) {\n  unit = unit ? unit.toLowerCase() : 'ether';\n  if (!ethjsUnit.unitMap[unit]) {\n    throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n  }\n  return unit;\n};\n/**\r\n * Takes a number of wei and converts it to any other ether unit.\r\n *\r\n * Possible units are:\r\n *   SI Short   SI Full        Effigy       Other\r\n * - kwei       femtoether     babbage\r\n * - mwei       picoether      lovelace\r\n * - gwei       nanoether      shannon      nano\r\n * - --         microether     szabo        micro\r\n * - --         milliether     finney       milli\r\n * - ether      --             --\r\n * - kether                    --           grand\r\n * - mether\r\n * - gether\r\n * - tether\r\n *\r\n * @method fromWei\r\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\r\n * @param {String} unit the unit to convert to, default ether\r\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\r\n */\nvar fromWei = function (number, unit) {\n  unit = getUnitValue(unit);\n  if (!utils.isBN(number) && !(typeof number === 'string')) {\n    throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n  }\n  return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n/**\r\n * Takes a number of a unit and converts it to wei.\r\n *\r\n * Possible units are:\r\n *   SI Short   SI Full        Effigy       Other\r\n * - kwei       femtoether     babbage\r\n * - mwei       picoether      lovelace\r\n * - gwei       nanoether      shannon      nano\r\n * - --         microether     szabo        micro\r\n * - --         microether     szabo        micro\r\n * - --         milliether     finney       milli\r\n * - ether      --             --\r\n * - kether                    --           grand\r\n * - mether\r\n * - gether\r\n * - tether\r\n *\r\n * @method toWei\r\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\r\n * @param {String} unit the unit to convert from, default ether\r\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\r\n */\nvar toWei = function (number, unit) {\n  unit = getUnitValue(unit);\n  if (!utils.isBN(number) && !(typeof number === 'string')) {\n    throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n  }\n  return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n/**\r\n * Converts to a checksum address\r\n *\r\n * @method toChecksumAddress\r\n * @param {String} address the given HEX address\r\n * @return {String}\r\n */\nvar toChecksumAddress = function (address) {\n  if (typeof address === 'undefined') return '';\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n  address = address.toLowerCase().replace(/^0x/i, '');\n  var addressHash = utils.sha3(address).replace(/^0x/i, '');\n  var checksumAddress = '0x';\n  for (var i = 0; i < address.length; i++) {\n    // If ith character is 8 to f then make it uppercase\n    if (parseInt(addressHash[i], 16) > 7) {\n      checksumAddress += address[i].toUpperCase();\n    } else {\n      checksumAddress += address[i];\n    }\n  }\n  return checksumAddress;\n};\n/**\r\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\r\n * For more details on this type of function, see\r\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\r\n *\r\n * @method compareBlockNumbers\r\n *\r\n * @param {String|Number|BN} a\r\n *\r\n * @param {String|Number|BN} b\r\n *\r\n * @returns {Number} -1, 0, or 1\r\n */\nvar compareBlockNumbers = function (a, b) {\n  if (a == b) {\n    return 0;\n  } else if ((\"genesis\" == a || \"earliest\" == a || 0 == a) && (\"genesis\" == b || \"earliest\" == b || 0 == b)) {\n    return 0;\n  } else if (\"genesis\" == a || \"earliest\" == a) {\n    // b !== a, thus a < b\n    return -1;\n  } else if (\"genesis\" == b || \"earliest\" == b) {\n    // b !== a, thus a > b\n    return 1;\n  } else if (a == \"latest\") {\n    if (b == \"pending\") {\n      return -1;\n    } else {\n      // b !== (\"pending\" OR \"latest\"), thus a > b\n      return 1;\n    }\n  } else if (b === \"latest\") {\n    if (a == \"pending\") {\n      return 1;\n    } else {\n      // b !== (\"pending\" OR \"latest\"), thus a > b\n      return -1;\n    }\n  } else if (a == \"pending\") {\n    // b (== OR <) \"latest\", thus a > b\n    return 1;\n  } else if (b == \"pending\") {\n    return -1;\n  } else {\n    let bnA = new BN(a);\n    let bnB = new BN(b);\n    if (bnA.lt(bnB)) {\n      return -1;\n    } else if (bnA.eq(bnB)) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n};\nmodule.exports = {\n  _fireError: _fireError,\n  _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n  _flattenTypes: _flattenTypes,\n  // extractDisplayName: extractDisplayName,\n  // extractTypeName: extractTypeName,\n  randomHex: randomHex,\n  BN: utils.BN,\n  isBN: utils.isBN,\n  isBigNumber: utils.isBigNumber,\n  isHex: utils.isHex,\n  isHexStrict: utils.isHexStrict,\n  sha3: utils.sha3,\n  sha3Raw: utils.sha3Raw,\n  keccak256: utils.sha3,\n  soliditySha3: soliditySha3.soliditySha3,\n  soliditySha3Raw: soliditySha3.soliditySha3Raw,\n  encodePacked: soliditySha3.encodePacked,\n  isAddress: utils.isAddress,\n  checkAddressChecksum: utils.checkAddressChecksum,\n  toChecksumAddress: toChecksumAddress,\n  toHex: utils.toHex,\n  toBN: utils.toBN,\n  bytesToHex: utils.bytesToHex,\n  hexToBytes: utils.hexToBytes,\n  hexToNumberString: utils.hexToNumberString,\n  hexToNumber: utils.hexToNumber,\n  toDecimal: utils.hexToNumber,\n  numberToHex: utils.numberToHex,\n  fromDecimal: utils.numberToHex,\n  hexToUtf8: utils.hexToUtf8,\n  hexToString: utils.hexToUtf8,\n  toUtf8: utils.hexToUtf8,\n  stripHexPrefix: utils.stripHexPrefix,\n  utf8ToHex: utils.utf8ToHex,\n  stringToHex: utils.utf8ToHex,\n  fromUtf8: utils.utf8ToHex,\n  hexToAscii: hexToAscii,\n  toAscii: hexToAscii,\n  asciiToHex: asciiToHex,\n  fromAscii: asciiToHex,\n  unitMap: ethjsUnit.unitMap,\n  toWei: toWei,\n  fromWei: fromWei,\n  padLeft: utils.leftPad,\n  leftPad: utils.leftPad,\n  padRight: utils.rightPad,\n  rightPad: utils.rightPad,\n  toTwosComplement: utils.toTwosComplement,\n  isBloom: utils.isBloom,\n  isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n  isContractAddressInBloom: utils.isContractAddressInBloom,\n  isTopic: utils.isTopic,\n  isTopicInBloom: utils.isTopicInBloom,\n  isInBloom: utils.isInBloom,\n  compareBlockNumbers: compareBlockNumbers,\n  toNumber: utils.toNumber\n};","map":{"version":3,"names":["ethjsUnit","require","utils","soliditySha3","randombytes","BN","_fireError","error","emitter","reject","callback","optionalData","Error","data","Array","isArray","JSON","stringify","message","listeners","length","catch","setTimeout","emit","removeAllListeners","_jsonInterfaceMethodToString","json","name","indexOf","_flattenTypes","inputs","join","includeTuple","puts","types","forEach","param","components","type","substring","suffix","arrayBracket","result","push","randomHex","size","toString","hexToAscii","hex","isHexStrict","str","i","l","code","parseInt","substr","String","fromCharCode","asciiToHex","charCodeAt","n","getUnitValue","unit","toLowerCase","unitMap","fromWei","number","isBN","toWei","toChecksumAddress","address","test","replace","addressHash","sha3","checksumAddress","toUpperCase","compareBlockNumbers","a","b","bnA","bnB","lt","eq","module","exports","isBigNumber","isHex","sha3Raw","keccak256","soliditySha3Raw","encodePacked","isAddress","checkAddressChecksum","toHex","toBN","bytesToHex","hexToBytes","hexToNumberString","hexToNumber","toDecimal","numberToHex","fromDecimal","hexToUtf8","hexToString","toUtf8","stripHexPrefix","utf8ToHex","stringToHex","fromUtf8","toAscii","fromAscii","padLeft","leftPad","padRight","rightPad","toTwosComplement","isBloom","isUserEthereumAddressInBloom","isContractAddressInBloom","isTopic","isTopicInBloom","isInBloom","toNumber"],"sources":["C:/spasi/frontend/node_modules/web3-eth-ens/node_modules/web3-utils/lib/index.js"],"sourcesContent":["/*\r\n This file is part of web3.js.\r\n\r\n web3.js is free software: you can redistribute it and/or modify\r\n it under the terms of the GNU Lesser General Public License as published by\r\n the Free Software Foundation, either version 3 of the License, or\r\n (at your option) any later version.\r\n\r\n web3.js is distributed in the hope that it will be useful,\r\n but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n GNU Lesser General Public License for more details.\r\n\r\n You should have received a copy of the GNU Lesser General Public License\r\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n/**\r\n * @file utils.js\r\n * @author Marek Kotewicz <marek@parity.io>\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\nvar ethjsUnit = require('ethjs-unit');\r\nvar utils = require('./utils.js');\r\nvar soliditySha3 = require('./soliditySha3.js');\r\nvar randombytes = require('randombytes');\r\nvar BN = require('bn.js');\r\n/**\r\n * Fires an error in an event emitter and callback and returns the eventemitter\r\n *\r\n * @method _fireError\r\n * @param {Object} error a string, a error, or an object with {message, data}\r\n * @param {Object} emitter\r\n * @param {Function} reject\r\n * @param {Function} callback\r\n * @param {any} optionalData\r\n * @return {Object} the emitter\r\n */\r\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\r\n    /*jshint maxcomplexity: 10 */\r\n    // add data if given\r\n    if (!!error && typeof error === 'object' && !(error instanceof Error) && error.data) {\r\n        if (!!error.data && typeof error.data === 'object' || Array.isArray(error.data)) {\r\n            error.data = JSON.stringify(error.data, null, 2);\r\n        }\r\n        error = error.message + \"\\n\" + error.data;\r\n    }\r\n    if (typeof error === 'string') {\r\n        error = new Error(error);\r\n    }\r\n    if (typeof callback === 'function') {\r\n        callback(error, optionalData);\r\n    }\r\n    if (typeof reject === 'function') {\r\n        // suppress uncatched error if an error listener is present\r\n        // OR suppress uncatched error if an callback listener is present\r\n        if (emitter &&\r\n            (typeof emitter.listeners === 'function' &&\r\n                emitter.listeners('error').length) || typeof callback === 'function') {\r\n            emitter.catch(function () { });\r\n        }\r\n        // reject later, to be able to return emitter\r\n        setTimeout(function () {\r\n            reject(error);\r\n        }, 1);\r\n    }\r\n    if (emitter && typeof emitter.emit === 'function') {\r\n        // emit later, to be able to return emitter\r\n        setTimeout(function () {\r\n            emitter.emit('error', error, optionalData);\r\n            emitter.removeAllListeners();\r\n        }, 1);\r\n    }\r\n    return emitter;\r\n};\r\n/**\r\n * Should be used to create full function/event name from json abi\r\n *\r\n * @method _jsonInterfaceMethodToString\r\n * @param {Object} json\r\n * @return {String} full function/event name\r\n */\r\nvar _jsonInterfaceMethodToString = function (json) {\r\n    if (!!json && typeof json === 'object' && json.name && json.name.indexOf('(') !== -1) {\r\n        return json.name;\r\n    }\r\n    return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\r\n};\r\n/**\r\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\r\n *\r\n * @method _flattenTypes\r\n * @param {bool} includeTuple\r\n * @param {Object} puts\r\n * @return {Array} parameters as strings\r\n */\r\nvar _flattenTypes = function (includeTuple, puts) {\r\n    // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\r\n    var types = [];\r\n    puts.forEach(function (param) {\r\n        if (typeof param.components === 'object') {\r\n            if (param.type.substring(0, 5) !== 'tuple') {\r\n                throw new Error('components found but type is not tuple; report on GitHub');\r\n            }\r\n            var suffix = '';\r\n            var arrayBracket = param.type.indexOf('[');\r\n            if (arrayBracket >= 0) {\r\n                suffix = param.type.substring(arrayBracket);\r\n            }\r\n            var result = _flattenTypes(includeTuple, param.components);\r\n            // console.log(\"result should have things: \" + result)\r\n            if (Array.isArray(result) && includeTuple) {\r\n                // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\r\n                types.push('tuple(' + result.join(',') + ')' + suffix);\r\n            }\r\n            else if (!includeTuple) {\r\n                // console.log(\"don't include tuple, but its an array. joining...: \" + result)\r\n                types.push('(' + result.join(',') + ')' + suffix);\r\n            }\r\n            else {\r\n                // console.log(\"its a single type within a tuple: \" + result.types)\r\n                types.push('(' + result + ')');\r\n            }\r\n        }\r\n        else {\r\n            // console.log(\"its a type and not directly in a tuple: \" + param.type)\r\n            types.push(param.type);\r\n        }\r\n    });\r\n    return types;\r\n};\r\n/**\r\n * Returns a random hex string by the given bytes size\r\n *\r\n * @param {Number} size\r\n * @returns {string}\r\n */\r\nvar randomHex = function (size) {\r\n    return '0x' + randombytes(size).toString('hex');\r\n};\r\n/**\r\n * Should be called to get ascii from it's hex representation\r\n *\r\n * @method hexToAscii\r\n * @param {String} hex\r\n * @returns {String} ascii string representation of hex value\r\n */\r\nvar hexToAscii = function (hex) {\r\n    if (!utils.isHexStrict(hex))\r\n        throw new Error('The parameter must be a valid HEX string.');\r\n    var str = \"\";\r\n    var i = 0, l = hex.length;\r\n    if (hex.substring(0, 2) === '0x') {\r\n        i = 2;\r\n    }\r\n    for (; i < l; i += 2) {\r\n        var code = parseInt(hex.substr(i, 2), 16);\r\n        str += String.fromCharCode(code);\r\n    }\r\n    return str;\r\n};\r\n/**\r\n * Should be called to get hex representation (prefixed by 0x) of ascii string\r\n *\r\n * @method asciiToHex\r\n * @param {String} str\r\n * @returns {String} hex representation of input string\r\n */\r\nvar asciiToHex = function (str) {\r\n    if (!str)\r\n        return \"0x00\";\r\n    var hex = \"\";\r\n    for (var i = 0; i < str.length; i++) {\r\n        var code = str.charCodeAt(i);\r\n        var n = code.toString(16);\r\n        hex += n.length < 2 ? '0' + n : n;\r\n    }\r\n    return \"0x\" + hex;\r\n};\r\n/**\r\n * Returns value of unit in Wei\r\n *\r\n * @method getUnitValue\r\n * @param {String} unit the unit to convert to, default ether\r\n * @returns {BN} value of the unit (in Wei)\r\n * @throws error if the unit is not correct:w\r\n */\r\nvar getUnitValue = function (unit) {\r\n    unit = unit ? unit.toLowerCase() : 'ether';\r\n    if (!ethjsUnit.unitMap[unit]) {\r\n        throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\r\n    }\r\n    return unit;\r\n};\r\n/**\r\n * Takes a number of wei and converts it to any other ether unit.\r\n *\r\n * Possible units are:\r\n *   SI Short   SI Full        Effigy       Other\r\n * - kwei       femtoether     babbage\r\n * - mwei       picoether      lovelace\r\n * - gwei       nanoether      shannon      nano\r\n * - --         microether     szabo        micro\r\n * - --         milliether     finney       milli\r\n * - ether      --             --\r\n * - kether                    --           grand\r\n * - mether\r\n * - gether\r\n * - tether\r\n *\r\n * @method fromWei\r\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\r\n * @param {String} unit the unit to convert to, default ether\r\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\r\n */\r\nvar fromWei = function (number, unit) {\r\n    unit = getUnitValue(unit);\r\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\r\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\r\n    }\r\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\r\n};\r\n/**\r\n * Takes a number of a unit and converts it to wei.\r\n *\r\n * Possible units are:\r\n *   SI Short   SI Full        Effigy       Other\r\n * - kwei       femtoether     babbage\r\n * - mwei       picoether      lovelace\r\n * - gwei       nanoether      shannon      nano\r\n * - --         microether     szabo        micro\r\n * - --         microether     szabo        micro\r\n * - --         milliether     finney       milli\r\n * - ether      --             --\r\n * - kether                    --           grand\r\n * - mether\r\n * - gether\r\n * - tether\r\n *\r\n * @method toWei\r\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\r\n * @param {String} unit the unit to convert from, default ether\r\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\r\n */\r\nvar toWei = function (number, unit) {\r\n    unit = getUnitValue(unit);\r\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\r\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\r\n    }\r\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\r\n};\r\n/**\r\n * Converts to a checksum address\r\n *\r\n * @method toChecksumAddress\r\n * @param {String} address the given HEX address\r\n * @return {String}\r\n */\r\nvar toChecksumAddress = function (address) {\r\n    if (typeof address === 'undefined')\r\n        return '';\r\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address))\r\n        throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\r\n    address = address.toLowerCase().replace(/^0x/i, '');\r\n    var addressHash = utils.sha3(address).replace(/^0x/i, '');\r\n    var checksumAddress = '0x';\r\n    for (var i = 0; i < address.length; i++) {\r\n        // If ith character is 8 to f then make it uppercase\r\n        if (parseInt(addressHash[i], 16) > 7) {\r\n            checksumAddress += address[i].toUpperCase();\r\n        }\r\n        else {\r\n            checksumAddress += address[i];\r\n        }\r\n    }\r\n    return checksumAddress;\r\n};\r\n/**\r\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\r\n * For more details on this type of function, see\r\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\r\n *\r\n * @method compareBlockNumbers\r\n *\r\n * @param {String|Number|BN} a\r\n *\r\n * @param {String|Number|BN} b\r\n *\r\n * @returns {Number} -1, 0, or 1\r\n */\r\nvar compareBlockNumbers = function (a, b) {\r\n    if (a == b) {\r\n        return 0;\r\n    }\r\n    else if ((\"genesis\" == a || \"earliest\" == a || 0 == a) && (\"genesis\" == b || \"earliest\" == b || 0 == b)) {\r\n        return 0;\r\n    }\r\n    else if (\"genesis\" == a || \"earliest\" == a) {\r\n        // b !== a, thus a < b\r\n        return -1;\r\n    }\r\n    else if (\"genesis\" == b || \"earliest\" == b) {\r\n        // b !== a, thus a > b\r\n        return 1;\r\n    }\r\n    else if (a == \"latest\") {\r\n        if (b == \"pending\") {\r\n            return -1;\r\n        }\r\n        else {\r\n            // b !== (\"pending\" OR \"latest\"), thus a > b\r\n            return 1;\r\n        }\r\n    }\r\n    else if (b === \"latest\") {\r\n        if (a == \"pending\") {\r\n            return 1;\r\n        }\r\n        else {\r\n            // b !== (\"pending\" OR \"latest\"), thus a > b\r\n            return -1;\r\n        }\r\n    }\r\n    else if (a == \"pending\") {\r\n        // b (== OR <) \"latest\", thus a > b\r\n        return 1;\r\n    }\r\n    else if (b == \"pending\") {\r\n        return -1;\r\n    }\r\n    else {\r\n        let bnA = new BN(a);\r\n        let bnB = new BN(b);\r\n        if (bnA.lt(bnB)) {\r\n            return -1;\r\n        }\r\n        else if (bnA.eq(bnB)) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    }\r\n};\r\nmodule.exports = {\r\n    _fireError: _fireError,\r\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\r\n    _flattenTypes: _flattenTypes,\r\n    // extractDisplayName: extractDisplayName,\r\n    // extractTypeName: extractTypeName,\r\n    randomHex: randomHex,\r\n    BN: utils.BN,\r\n    isBN: utils.isBN,\r\n    isBigNumber: utils.isBigNumber,\r\n    isHex: utils.isHex,\r\n    isHexStrict: utils.isHexStrict,\r\n    sha3: utils.sha3,\r\n    sha3Raw: utils.sha3Raw,\r\n    keccak256: utils.sha3,\r\n    soliditySha3: soliditySha3.soliditySha3,\r\n    soliditySha3Raw: soliditySha3.soliditySha3Raw,\r\n    encodePacked: soliditySha3.encodePacked,\r\n    isAddress: utils.isAddress,\r\n    checkAddressChecksum: utils.checkAddressChecksum,\r\n    toChecksumAddress: toChecksumAddress,\r\n    toHex: utils.toHex,\r\n    toBN: utils.toBN,\r\n    bytesToHex: utils.bytesToHex,\r\n    hexToBytes: utils.hexToBytes,\r\n    hexToNumberString: utils.hexToNumberString,\r\n    hexToNumber: utils.hexToNumber,\r\n    toDecimal: utils.hexToNumber,\r\n    numberToHex: utils.numberToHex,\r\n    fromDecimal: utils.numberToHex,\r\n    hexToUtf8: utils.hexToUtf8,\r\n    hexToString: utils.hexToUtf8,\r\n    toUtf8: utils.hexToUtf8,\r\n    stripHexPrefix: utils.stripHexPrefix,\r\n    utf8ToHex: utils.utf8ToHex,\r\n    stringToHex: utils.utf8ToHex,\r\n    fromUtf8: utils.utf8ToHex,\r\n    hexToAscii: hexToAscii,\r\n    toAscii: hexToAscii,\r\n    asciiToHex: asciiToHex,\r\n    fromAscii: asciiToHex,\r\n    unitMap: ethjsUnit.unitMap,\r\n    toWei: toWei,\r\n    fromWei: fromWei,\r\n    padLeft: utils.leftPad,\r\n    leftPad: utils.leftPad,\r\n    padRight: utils.rightPad,\r\n    rightPad: utils.rightPad,\r\n    toTwosComplement: utils.toTwosComplement,\r\n    isBloom: utils.isBloom,\r\n    isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\r\n    isContractAddressInBloom: utils.isContractAddressInBloom,\r\n    isTopic: utils.isTopic,\r\n    isTopicInBloom: utils.isTopicInBloom,\r\n    isInBloom: utils.isInBloom,\r\n    compareBlockNumbers: compareBlockNumbers,\r\n    toNumber: utils.toNumber\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}