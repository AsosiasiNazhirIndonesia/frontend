{"ast":null,"code":"var fs = require('fs');\nvar util = require('util');\nvar _ = require('underscore');\nvar _s = require('underscore.string');\nvar htmlparser = require('htmlparser2');\nvar helper = require('./helper');\nvar format = require('./formatter');\n\n// Which type of tags should not be parsed\nvar SKIP_TYPES = ['style', 'script'];\nfunction htmlToText(html, options) {\n  options = options || {};\n  _.defaults(options, {\n    wordwrap: 80,\n    tables: [],\n    preserveNewlines: false,\n    uppercaseHeadings: true,\n    hideLinkHrefIfSameAsText: false,\n    linkHrefBaseUrl: null,\n    baseElement: 'body',\n    returnDomByDefault: true,\n    decodeOptions: {\n      isAttributeValue: false,\n      strict: false\n    },\n    longWordSplit: {\n      wrapCharacters: [],\n      forceWrapOnLimit: false\n    }\n  });\n  var handler = new htmlparser.DefaultHandler(function (error, dom) {}, {\n    verbose: true\n  });\n  new htmlparser.Parser(handler).parseComplete(html);\n  options.lineCharCount = 0;\n  var result = '';\n  var baseElements = Array.isArray(options.baseElement) ? options.baseElement : [options.baseElement];\n  for (var idx = 0; idx < baseElements.length; ++idx) {\n    result += walk(filterBody(handler.dom, options, baseElements[idx]), options);\n  }\n  return _s.strip(result);\n}\nfunction filterBody(dom, options, baseElement) {\n  var result = null;\n  var splitTag = helper.splitCssSearchTag(baseElement);\n  function walk(dom) {\n    if (result) return;\n    _.each(dom, function (elem) {\n      if (result) return;\n      if (elem.name === splitTag.element) {\n        var documentClasses = elem.attribs && elem.attribs.class ? elem.attribs.class.split(\" \") : [];\n        var documentIds = elem.attribs && elem.attribs.id ? elem.attribs.id.split(\" \") : [];\n        if (splitTag.classes.every(function (val) {\n          return documentClasses.indexOf(val) >= 0;\n        }) && splitTag.ids.every(function (val) {\n          return documentIds.indexOf(val) >= 0;\n        })) {\n          result = [elem];\n          return;\n        }\n      }\n      if (elem.children) walk(elem.children);\n    });\n  }\n  walk(dom);\n  return options.returnDomByDefault ? result || dom : result;\n}\nfunction containsTable(attr, tables) {\n  if (tables === true) return true;\n  function removePrefix(key) {\n    return key.substr(1);\n  }\n  function checkPrefix(prefix) {\n    return function (key) {\n      return _s.startsWith(key, prefix);\n    };\n  }\n  function filterByPrefix(tables, prefix) {\n    return _(tables).chain().filter(checkPrefix(prefix)).map(removePrefix).value();\n  }\n  var classes = filterByPrefix(tables, '.');\n  var ids = filterByPrefix(tables, '#');\n  return attr && (_.include(classes, attr['class']) || _.include(ids, attr['id']));\n}\nfunction walk(dom, options, result) {\n  if (arguments.length < 3) {\n    result = '';\n  }\n  var whiteSpaceRegex = /\\s$/;\n  _.each(dom, function (elem) {\n    switch (elem.type) {\n      case 'tag':\n        switch (elem.name.toLowerCase()) {\n          case 'img':\n            result += format.image(elem, options);\n            break;\n          case 'a':\n            // Inline element needs its leading space to be trimmed if `result`\n            // currently ends with whitespace\n            elem.trimLeadingSpace = whiteSpaceRegex.test(result);\n            result += format.anchor(elem, walk, options);\n            break;\n          case 'p':\n            result += format.paragraph(elem, walk, options);\n            break;\n          case 'h1':\n          case 'h2':\n          case 'h3':\n          case 'h4':\n          case 'h5':\n          case 'h6':\n            result += format.heading(elem, walk, options);\n            break;\n          case 'br':\n            result += format.lineBreak(elem, walk, options);\n            break;\n          case 'hr':\n            result += format.horizontalLine(elem, walk, options);\n            break;\n          case 'ul':\n            result += format.unorderedList(elem, walk, options);\n            break;\n          case 'ol':\n            result += format.orderedList(elem, walk, options);\n            break;\n          case 'pre':\n            var newOptions = _(options).clone();\n            newOptions.isInPre = true;\n            result += format.paragraph(elem, walk, newOptions);\n            break;\n          case 'table':\n            if (containsTable(elem.attribs, options.tables)) {\n              result += format.table(elem, walk, options);\n              break;\n            }\n          default:\n            result = walk(elem.children || [], options, result);\n        }\n        break;\n      case 'text':\n        if (elem.data !== '\\r\\n') {\n          // Text needs its leading space to be trimmed if `result`\n          // currently ends with whitespace\n          elem.trimLeadingSpace = whiteSpaceRegex.test(result);\n          result += format.text(elem, options);\n        }\n        break;\n      default:\n        if (!_.include(SKIP_TYPES, elem.type)) {\n          result = walk(elem.children || [], options, result);\n        }\n    }\n    options.lineCharCount = result.length - (result.lastIndexOf('\\n') + 1);\n  });\n  return result;\n}\nexports.fromFile = function (file, options, callback) {\n  if (!callback) {\n    callback = options;\n    options = {};\n  }\n  fs.readFile(file, 'utf8', function (err, str) {\n    var result = htmlToText(str, options);\n    return callback(null, result);\n  });\n};\nexports.fromString = function (str, options) {\n  return htmlToText(str, options || {});\n};","map":{"version":3,"names":["fs","require","util","_","_s","htmlparser","helper","format","SKIP_TYPES","htmlToText","html","options","defaults","wordwrap","tables","preserveNewlines","uppercaseHeadings","hideLinkHrefIfSameAsText","linkHrefBaseUrl","baseElement","returnDomByDefault","decodeOptions","isAttributeValue","strict","longWordSplit","wrapCharacters","forceWrapOnLimit","handler","DefaultHandler","error","dom","verbose","Parser","parseComplete","lineCharCount","result","baseElements","Array","isArray","idx","length","walk","filterBody","strip","splitTag","splitCssSearchTag","each","elem","name","element","documentClasses","attribs","class","split","documentIds","id","classes","every","val","indexOf","ids","children","containsTable","attr","removePrefix","key","substr","checkPrefix","prefix","startsWith","filterByPrefix","chain","filter","map","value","include","arguments","whiteSpaceRegex","type","toLowerCase","image","trimLeadingSpace","test","anchor","paragraph","heading","lineBreak","horizontalLine","unorderedList","orderedList","newOptions","clone","isInPre","table","data","text","lastIndexOf","exports","fromFile","file","callback","readFile","err","str","fromString"],"sources":["C:/frontend/node_modules/html-to-text/lib/html-to-text.js"],"sourcesContent":["var fs = require('fs');\r\nvar util = require('util');\r\n\r\nvar _ = require('underscore');\r\nvar _s = require('underscore.string');\r\nvar htmlparser = require('htmlparser2');\r\n\r\nvar helper = require('./helper');\r\nvar format = require('./formatter');\r\n\r\n// Which type of tags should not be parsed\r\nvar SKIP_TYPES = [\r\n\t'style',\r\n\t'script'\r\n];\r\n\r\nfunction htmlToText(html, options) {\r\n\toptions = options || {};\r\n\t_.defaults(options, {\r\n\t\twordwrap: 80,\r\n\t\ttables: [],\r\n\t\tpreserveNewlines: false,\r\n\t\tuppercaseHeadings: true,\r\n\t\thideLinkHrefIfSameAsText: false,\r\n\t\tlinkHrefBaseUrl: null,\r\n\t\tbaseElement: 'body',\r\n\t\treturnDomByDefault: true,\r\n\t\tdecodeOptions: {\r\n\t\t\tisAttributeValue: false,\r\n\t\t\tstrict: false\r\n\t\t},\r\n\t\tlongWordSplit: {\r\n\t\t\twrapCharacters: [],\r\n\t\t\tforceWrapOnLimit: false\r\n\t\t}\r\n\t});\r\n\r\n\tvar handler = new htmlparser.DefaultHandler(function (error, dom) {\r\n\r\n\t}, {\r\n\t\tverbose: true\r\n\t});\r\n\tnew htmlparser.Parser(handler).parseComplete(html);\r\n\r\n\toptions.lineCharCount = 0;\r\n\r\n\tvar result = '';\r\n\tvar baseElements = Array.isArray(options.baseElement) ? options.baseElement : [options.baseElement];\r\n\tfor (var idx = 0; idx < baseElements.length; ++idx) {\r\n\t\tresult += walk(filterBody(handler.dom, options, baseElements[idx]), options);\r\n\t}\r\n\treturn _s.strip(result);\r\n}\r\n\r\nfunction filterBody(dom, options, baseElement) {\r\n\tvar result = null;\r\n\r\n\tvar splitTag = helper.splitCssSearchTag(baseElement);\r\n\r\n\tfunction walk(dom) {\r\n\t\tif (result) return;\r\n\t\t_.each(dom, function(elem) {\r\n\t\t\tif (result) return;\r\n\t\t\tif (elem.name === splitTag.element) {\r\n\t\t\t\tvar documentClasses = elem.attribs && elem.attribs.class ? elem.attribs.class.split(\" \") : [];\r\n\t\t\t\tvar documentIds = elem.attribs && elem.attribs.id ? elem.attribs.id.split(\" \") : [];\r\n\r\n\t\t\t\tif ((splitTag.classes.every(function (val) { return documentClasses.indexOf(val) >= 0 })) &&\r\n\t\t\t\t\t(splitTag.ids.every(function (val) { return documentIds.indexOf(val) >= 0 }))) {\r\n\t\t\t\t\tresult = [elem];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (elem.children) walk(elem.children);\r\n\t\t});\r\n\t}\r\n\twalk(dom);\r\n\treturn options.returnDomByDefault ? result || dom : result;\r\n}\r\n\r\nfunction containsTable(attr, tables) {\r\n\tif (tables === true) return true;\r\n\r\n\tfunction removePrefix(key) {\r\n\t\treturn key.substr(1);\r\n\t}\r\n\tfunction checkPrefix(prefix) {\r\n\t\treturn function(key) {\r\n\t\t\treturn _s.startsWith(key, prefix);\r\n\t\t};\r\n\t}\r\n\tfunction filterByPrefix(tables, prefix) {\r\n\t\treturn _(tables).chain()\r\n\t\t\t\t\t\t.filter(checkPrefix(prefix))\r\n\t\t\t\t\t\t.map(removePrefix)\r\n\t\t\t\t\t\t.value();\r\n\t}\r\n\tvar classes = filterByPrefix(tables, '.');\r\n\tvar ids = filterByPrefix(tables, '#');\r\n\treturn attr && (_.include(classes, attr['class']) || _.include(ids, attr['id']));\r\n}\r\n\r\nfunction walk(dom, options, result) {\r\n\tif (arguments.length < 3) {\r\n\t\tresult = '';\r\n\t}\r\n\tvar whiteSpaceRegex = /\\s$/;\r\n\t_.each(dom, function(elem) {\r\n\t\tswitch(elem.type) {\r\n\t\t\tcase 'tag':\r\n\t\t\t\tswitch(elem.name.toLowerCase()) {\r\n\t\t\t\t\tcase 'img':\r\n\t\t\t\t\t\tresult += format.image(elem, options);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'a':\r\n\t\t\t\t\t\t// Inline element needs its leading space to be trimmed if `result`\r\n\t\t\t\t\t\t// currently ends with whitespace\r\n\t\t\t\t\t\telem.trimLeadingSpace = whiteSpaceRegex.test(result);\r\n\t\t\t\t\t\tresult += format.anchor(elem, walk, options);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'p':\r\n\t\t\t\t\t\tresult += format.paragraph(elem, walk, options);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'h1':\r\n\t\t\t\t\tcase 'h2':\r\n\t\t\t\t\tcase 'h3':\r\n\t\t\t\t\tcase 'h4':\r\n\t\t\t\t\tcase 'h5':\r\n\t\t\t\t\tcase 'h6':\r\n\t\t\t\t\t\tresult += format.heading(elem, walk, options);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'br':\r\n\t\t\t\t\t\tresult += format.lineBreak(elem, walk, options);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'hr':\r\n\t\t\t\t\t\tresult += format.horizontalLine(elem, walk, options);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'ul':\r\n\t\t\t\t\t\tresult += format.unorderedList(elem, walk, options);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'ol':\r\n\t\t\t\t\t\tresult += format.orderedList(elem, walk, options);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'pre':\r\n\t\t\t\t\t\tvar newOptions = _(options).clone();\r\n\t\t\t\t\t\tnewOptions.isInPre = true;\r\n\t\t\t\t\t\tresult += format.paragraph(elem, walk, newOptions);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'table':\r\n\t\t\t\t\t\tif (containsTable(elem.attribs, options.tables)) {\r\n\t\t\t\t\t\t\tresult += format.table(elem, walk, options);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tresult = walk(elem.children || [], options, result);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'text':\r\n\t\t\t\tif (elem.data !== '\\r\\n') {\r\n\t\t\t\t\t// Text needs its leading space to be trimmed if `result`\r\n\t\t\t\t\t// currently ends with whitespace\r\n\t\t\t\t\telem.trimLeadingSpace = whiteSpaceRegex.test(result);\r\n\t\t\t\t\tresult += format.text(elem, options);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (!_.include(SKIP_TYPES, elem.type)) {\r\n\t\t\t\t\tresult = walk(elem.children || [], options, result);\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\toptions.lineCharCount = result.length - (result.lastIndexOf('\\n') + 1);\r\n\t});\r\n\treturn result;\r\n}\r\n\r\nexports.fromFile = function(file, options, callback) {\r\n\tif (!callback) {\r\n\t\tcallback = options;\r\n\t\toptions = {};\r\n\t}\r\n\tfs.readFile(file, 'utf8', function(err, str) {\r\n\t\tvar result = htmlToText(str, options);\r\n\t\treturn callback(null, result);\r\n\t});\r\n};\r\n\r\nexports.fromString = function(str, options) {\r\n\treturn htmlToText(str, options || {});\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}