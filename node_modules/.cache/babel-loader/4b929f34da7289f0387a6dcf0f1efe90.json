{"ast":null,"code":"\"use strict\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar utils_1 = require(\"../utils\");\n/**\r\n * Convert string keys in an object to UPPERCASE format.\r\n * @param obj: object to convert keys. If `obj` isn't a json object, `null` is returned.\r\n * @param opt: (optional) Options parameter, default is non-recursive.\r\n */\nfunction upperKeys(obj, opt) {\n  if (opt === void 0) {\n    opt = utils_1.DefaultOption;\n  }\n  if (!utils_1.isValidObject(obj)) return null;\n  opt = utils_1.validateOptions(opt);\n  var res = {};\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n    var nkey = key.toUpperCase();\n    if (opt.recursive) {\n      if (utils_1.isValidObject(value)) {\n        if (!utils_1.belongToTypes(value, opt.keepTypesOnRecursion)) {\n          value = upperKeys(value, opt);\n        }\n      } else if (opt.recursiveInArray && utils_1.isArrayObject(value)) {\n        value = __spreadArrays(value).map(function (v) {\n          var ret = v;\n          if (utils_1.isValidObject(v)) {\n            // object in array\n            if (!utils_1.belongToTypes(ret, opt.keepTypesOnRecursion)) {\n              ret = upperKeys(v, opt);\n            }\n          } else if (utils_1.isArrayObject(v)) {\n            // array in array\n            // workaround by using an object holding array value\n            var temp = upperKeys({\n              key: v\n            }, opt);\n            ret = temp.key;\n          }\n          return ret;\n        });\n      }\n    }\n    res[nkey] = value;\n  });\n  return res;\n}\nexports.default = upperKeys;","map":{"version":3,"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","Object","defineProperty","exports","value","utils_1","require","upperKeys","obj","opt","DefaultOption","isValidObject","validateOptions","res","keys","forEach","key","nkey","toUpperCase","recursive","belongToTypes","keepTypesOnRecursion","recursiveInArray","isArrayObject","map","v","ret","temp","default"],"sources":["C:/frontend/node_modules/js-convert-case/lib/modules/extends/uppercase-keys-object/index.js"],"sourcesContent":["\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utils_1 = require(\"../utils\");\r\n/**\r\n * Convert string keys in an object to UPPERCASE format.\r\n * @param obj: object to convert keys. If `obj` isn't a json object, `null` is returned.\r\n * @param opt: (optional) Options parameter, default is non-recursive.\r\n */\r\nfunction upperKeys(obj, opt) {\r\n    if (opt === void 0) { opt = utils_1.DefaultOption; }\r\n    if (!utils_1.isValidObject(obj))\r\n        return null;\r\n    opt = utils_1.validateOptions(opt);\r\n    var res = {};\r\n    Object.keys(obj).forEach(function (key) {\r\n        var value = obj[key];\r\n        var nkey = key.toUpperCase();\r\n        if (opt.recursive) {\r\n            if (utils_1.isValidObject(value)) {\r\n                if (!utils_1.belongToTypes(value, opt.keepTypesOnRecursion)) {\r\n                    value = upperKeys(value, opt);\r\n                }\r\n            }\r\n            else if (opt.recursiveInArray && utils_1.isArrayObject(value)) {\r\n                value = __spreadArrays(value).map(function (v) {\r\n                    var ret = v;\r\n                    if (utils_1.isValidObject(v)) {\r\n                        // object in array\r\n                        if (!utils_1.belongToTypes(ret, opt.keepTypesOnRecursion)) {\r\n                            ret = upperKeys(v, opt);\r\n                        }\r\n                    }\r\n                    else if (utils_1.isArrayObject(v)) {\r\n                        // array in array\r\n                        // workaround by using an object holding array value\r\n                        var temp = upperKeys({ key: v }, opt);\r\n                        ret = temp.key;\r\n                    }\r\n                    return ret;\r\n                });\r\n            }\r\n        }\r\n        res[nkey] = value;\r\n    });\r\n    return res;\r\n}\r\nexports.default = upperKeys;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}